#pragma checksum "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "310e25ec66e89c6d6f431d285fb3bb4620e7e3b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PaymentRequest_RequestDetail), @"mvc.1.0.view", @"/Views/PaymentRequest/RequestDetail.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PaymentRequest/RequestDetail.cshtml", typeof(AspNetCore.Views_PaymentRequest_RequestDetail))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
using DAL;

#line default
#line hidden
#line 2 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
using DAL.Models;

#line default
#line hidden
#line 3 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
using DAL.Models.ProjectFinancialSummar;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"310e25ec66e89c6d6f431d285fb3bb4620e7e3b5", @"/Views/PaymentRequest/RequestDetail.cshtml")]
    public class Views_PaymentRequest_RequestDetail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DAL.Models.PaymentRequqest.RequestViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datepicker/bootstrap-datepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatable/jquery.datatable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/custom-thousands-separator/dist/number-divider.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 5 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
  
    ViewData["Title"] = Model.RequestHeader.Id == 0 ? "Nhập thông tin yêu cầu thanh toán" : "Yêu cầu thanh toán: " + Model.RequestHeader.Code;
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(323, 313, true);
            WriteLiteral(@"<style>
    .file-btn-action{
        font-size:12pt;
        cursor:pointer;
    }
    .tr_attach {
        background: #f0dc82;
    }
</style>

<section class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h1>");
            EndContext();
            BeginContext(638, 17, false);
#line 23 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(656, 254, true);
            WriteLiteral("</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <ol class=\"breadcrumb float-sm-right\">\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Trang chủ</a></li>\r\n                    <li class=\"breadcrumb-item active\">");
            EndContext();
            BeginContext(912, 17, false);
#line 28 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                   Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(930, 523, true);
            WriteLiteral(@"</li>

                </ol>
            </div>
        </div>
    </div>
</section>
<section class=""content"">
    <div class=""card"">
        <div class=""card-body"">

            <form id=""form-paymentrequest"" class=""form-horizontal"">
                <fieldset class=""border rounded-1 pb-3 pe-3 ps-3 mb-3"">
                    <legend class=""float-none w-auto px-3 text-uppercase fw-bold fs-2 mb-0 text-blue"">Thông tin người lập yêu cầu</legend>
                    <div class=""row"">
                        ");
            EndContext();
            BeginContext(1454, 39, false);
#line 43 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                   Write(Html.HiddenFor(x => x.RequestHeader.Id));

#line default
#line hidden
            EndContext();
            BeginContext(1493, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(1520, 41, false);
#line 44 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                   Write(Html.HiddenFor(x => x.RequestHeader.Code));

#line default
#line hidden
            EndContext();
            BeginContext(1561, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(1588, 43, false);
#line 45 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                   Write(Html.HiddenFor(x => x.RequestHeader.Status));

#line default
#line hidden
            EndContext();
            BeginContext(1631, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(1658, 46, false);
#line 46 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                   Write(Html.HiddenFor(x => x.RequestHeader.CreatedBy));

#line default
#line hidden
            EndContext();
            BeginContext(1704, 26, true);
            WriteLiteral("\r\n                        ");
            EndContext();
            BeginContext(1731, 56, false);
#line 47 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                   Write(Html.HiddenFor(x => x.RequestHeader.CreatedByDepartment));

#line default
#line hidden
            EndContext();
            BeginContext(1787, 354, true);
            WriteLiteral(@"

                        <div class=""col-md-6"">
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Mã yêu cầu</label>
                                <div class=""col-md-6"">
                                    <input type=""text"" class=""form-control"" placeholder=""Tự động""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2141, "\"", 2176, 1);
#line 53 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 2149, Model.RequestHeader.Code, 2149, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2177, 498, true);
            WriteLiteral(@" disabled=""disabled"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Ngày yêu cầu</label>
                                <div class=""col-md-6"">
                                    <div class=""input-group date"">
                                        <input type=""text"" id=""RequestHeader_DateRequest"" name=""RequestHeader.DateRequest""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2675, "\"", 2804, 1);
#line 60 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 2683, Model.RequestHeader.Id != 0?Model.RequestHeader.DateRequest.ToString("dd/MM/yyyy"):DateTime.Now.ToString("dd/MM/yyyy"), 2683, 121, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2805, 276, true);
            WriteLiteral(@" class=""form-control"">
                                        <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                                    </div>
                                </div>
                            </div>
");
            EndContext();
#line 65 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                              
                                if (Model.RequestHeader.Status == DAL.Contanst.PaymentRequesStatus_Approved
                                    || Model.RequestHeader.Status == DAL.Contanst.PaymentRequesStatus_Unc
                                    || Model.RequestHeader.Status == DAL.Contanst.PaymentRequesStatus_Completed)
                                {

#line default
#line hidden
            BeginContext(3478, 291, true);
            WriteLiteral(@"                                    <div class=""form-group row"">
                                        <div class=""col-sm-10"" id=""load-unc-attach"">
                                           
                                        </div>

                                    </div>
");
            EndContext();
#line 76 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                }
                            

#line default
#line hidden
            BeginContext(3835, 367, true);
            WriteLiteral(@"
                        </div>

                        <div class=""col-md-6"">
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Người yêu cầu</label>
                                <div class=""col-md-6"">
                                    <input type=""text"" class=""form-control""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 4202, "\"", 4246, 1);
#line 85 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 4210, Model.RequestHeader.CreatedByName, 4210, 36, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4247, 346, true);
            WriteLiteral(@" disabled=""disabled"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Khoa/Phòng ban</label>
                                <div class=""col-md-6"">
                                    ");
            EndContext();
            BeginContext(4594, 114, false);
#line 91 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                               Write(Html.TextBoxFor(x => x.RequestHeader.CreatedByDepartment, new { @class = "form-control", @disabled = "disabled" }));

#line default
#line hidden
            EndContext();
            BeginContext(4708, 193, true);
            WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row\">\r\n                                <div class=\"col-md-10\">\r\n");
            EndContext();
#line 96 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                      
                                        var lstStatus = (ListResultModel<StatusHistoryModel>)ViewBag.StatusHistory;
                                        if (lstStatus.Results.Any())
                                        {

#line default
#line hidden
            BeginContext(5171, 82, true);
            WriteLiteral("                                            <table class=\"table table-bordered\">\r\n");
            EndContext();
#line 101 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                  
                                                    int stt = 1;
                                                    foreach (var status in lstStatus.Results)
                                                    {
                                                        string classStatus = "";

                                                        if (status.Status == DAL.Contanst.PaymentRequesStatus_Draft)
                                                        {
                                                            classStatus = "<span class='badge badge-secondary badge-status'>Nháp</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Waiting)
                                                        {
                                                            classStatus = "<span class='badge badge-warning badge-status'>Chờ duyệt</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Approved)
                                                        {
                                                            classStatus = "<span class='badge badge-success badge-status'>Đã duyệt</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Rejected)
                                                        {
                                                            classStatus = "<span class='badge badge-danger badge-status'>Từ chối</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Canceled)
                                                        {
                                                            classStatus = "<span class='badge badge-danger badge-status'>Huỷ</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Unc)
                                                        {
                                                            classStatus = "<span class='badge badge-success badge-status'>Đã uỷ nhiệm chi</span>";
                                                        }
                                                        else if (status.Status == DAL.Contanst.PaymentRequesStatus_Completed)
                                                        {
                                                            classStatus = "<span class='badge badge-success badge-status'>Hoàn thành</span>";
                                                        }

#line default
#line hidden
            BeginContext(8287, 110, true);
            WriteLiteral("                                                <tr>\r\n                                                    <td>");
            EndContext();
            BeginContext(8399, 3, false);
#line 136 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                    Write(stt);

#line default
#line hidden
            EndContext();
            BeginContext(8403, 63, true);
            WriteLiteral("</td>\r\n                                                    <td>");
            EndContext();
            BeginContext(8467, 21, false);
#line 137 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                   Write(Html.Raw(classStatus));

#line default
#line hidden
            EndContext();
            BeginContext(8488, 63, true);
            WriteLiteral("</td>\r\n                                                    <td>");
            EndContext();
            BeginContext(8552, 17, false);
#line 138 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                   Write(status.ActionName);

#line default
#line hidden
            EndContext();
            BeginContext(8569, 63, true);
            WriteLiteral("</td>\r\n                                                    <td>");
            EndContext();
            BeginContext(8633, 55, false);
#line 139 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                   Write(status.ActionDate.Value.ToString("dd/MM/yyyy hh:mm tt"));

#line default
#line hidden
            EndContext();
            BeginContext(8688, 62, true);
            WriteLiteral("</td>\r\n                                                </tr>\r\n");
            EndContext();
#line 141 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"

                                                        stt++;
                                                    }
                                                

#line default
#line hidden
            BeginContext(8922, 54, true);
            WriteLiteral("                                            </table>\r\n");
            EndContext();
#line 146 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
            BeginContext(9108, 106, true);
            WriteLiteral("                                            <span class=\'badge badge-secondary badge-status\'>Nháp</span>\r\n");
            EndContext();
#line 150 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                        }
                                    

#line default
#line hidden
            BeginContext(9296, 879, true);
            WriteLiteral(@"
                                </div>
                            </div>
                        </div>

                    </div>
                </fieldset>



                <fieldset class=""border rounded-1 pb-3 pe-3 ps-3 mb-3"">
                    <legend class=""float-none w-auto px-3 text-uppercase fw-bold fs-2 mb-0 text-blue"">Nội dung yêu cầu</legend>
                    <div class=""row"">
                        <div class=""col-sm-6"">
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Nguồn thu</label>
                                <div class=""col-md-6"">
                                    <select class=""form-control"" id=""ListRequestItems_ProjectId"" name=""ListRequestItems.ProjectId"">
                                        <option value="""">Chọn dự án</option>
");
            EndContext();
#line 171 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                          
                                            var lstProject = (ListResultModel<DAL.Models.ProjectFinancialSummar.ProjectFinancialSummarGridModel>)ViewBag.DDLProject;
                                            foreach (var item in lstProject.Results)
                                            {
                                                string selected = "";
                                                if (Model.ListRequestItems.Any())
                                                {
                                                    selected = Model.ListRequestItems.FirstOrDefault().ProjectId == item.Id ? "selected='selected'" : string.Empty;
                                                }


#line default
#line hidden
            BeginContext(10941, 56, true);
            WriteLiteral("                                                <option ");
            EndContext();
            BeginContext(10999, 8, false);
#line 181 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                    Write(selected);

#line default
#line hidden
            EndContext();
            BeginContext(11008, 8, true);
            WriteLiteral(" value=\"");
            EndContext();
            BeginContext(11018, 7, false);
#line 181 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                                       Write(item.Id);

#line default
#line hidden
            EndContext();
            BeginContext(11026, 2, true);
            WriteLiteral("\">");
            EndContext();
            BeginContext(11029, 16, false);
#line 181 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                                                  Write(item.ProjectName);

#line default
#line hidden
            EndContext();
            BeginContext(11045, 11, true);
            WriteLiteral("</option>\r\n");
            EndContext();
#line 182 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                            }
                                        

#line default
#line hidden
            BeginContext(11146, 3562, true);
            WriteLiteral(@"

                                    </select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Mã nguồn thu</label>
                                <div class=""col-md-6"">
                                    <input class=""form-control"" id=""txt-projectcode"" type=""text"" disabled=""disabled"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Thời gian từ</label>
                                <div class=""col-md-6"">
                                    <div class=""input-group date"">
                                        <input type=""text"" disabled=""disabled"" id=""txt-from-projectdate"" value="""" class=""form-control"">
                                        <span class=""input-group-addon group-date");
            WriteLiteral(@"-icon""><i class=""far fa-calendar-alt""></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Thời gian đến</label>
                                <div class=""col-md-6"">
                                    <div class=""input-group date"">
                                        <input type=""text"" disabled=""disabled"" id=""txt-to-projectdate"" class=""form-control"">
                                        <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Căn cứ pháp lý</label>
                                <div class=""co");
            WriteLiteral(@"l-md-6"">
                                    <input type=""text"" id=""txt-base-on-law"" class=""form-control"" disabled />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Tổng hạn mức</label>
                                <div class=""col-md-6"">
                                    <input type=""text"" id=""txt-hanmuc"" value="""" class=""form-control"" disabled />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Đã sử dụng</label>
                                <div class=""col-md-6"">
                                    <input type=""text"" id=""text-used"" value="""" class=""form-control"" disabled />
                                </div>
                            </div>
                            <div clas");
            WriteLiteral(@"s=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Ghi chú nguồn thu</label>
                                <div class=""col-md-6"">
                                    <textarea class=""form-control"" id=""txt-note-project"" disabled rows=""3"">Tết đến ròi</textarea>
                                </div>
                            </div>
                        </div>
                        <div class=""col-sm-6"">
                            ");
            EndContext();
            BeginContext(14709, 59, false);
#line 239 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                       Write(Html.HiddenFor(x => x.ListRequestItems.FirstOrDefault().Id));

#line default
#line hidden
            EndContext();
            BeginContext(14768, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(14799, 66, false);
#line 240 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                       Write(Html.HiddenFor(x => x.ListRequestItems.FirstOrDefault().RequestId));

#line default
#line hidden
            EndContext();
            BeginContext(14865, 344, true);
            WriteLiteral(@"
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Nhóm mục chi</label>
                                <div class=""col-md-6"">
                                    <select class=""form-control"" id=""ListRequestItems_ActivityId"" name=""ListRequestItems.ActivityId"">
");
            EndContext();
#line 245 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                          
                                            if (Model.ListRequestItems.Any())
                                            {
                                                int activityId = Model.ListRequestItems.FirstOrDefault().ActivityId;

#line default
#line hidden
            BeginContext(15497, 55, true);
            WriteLiteral("                                                <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 15552, "\"", 15573, 1);
#line 249 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 15560, activityId, 15560, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(15574, 12, true);
            WriteLiteral("></option>\r\n");
            EndContext();
#line 250 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(15730, 76, true);
            WriteLiteral("                                                <option value=\"\"></option>\r\n");
            EndContext();
#line 254 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                            }
                                        

#line default
#line hidden
            BeginContext(15896, 460, true);
            WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Mục chi</label>
                                <div class=""col-md-6"">
                                    <select class=""form-control"" id=""ListRequestItems_ExpenseId"" name=""ListRequestItems.ExpenseId"">
");
            EndContext();
#line 264 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                          
                                            if (Model.ListRequestItems.Any())
                                            {
                                                int expenseId = Model.ListRequestItems.FirstOrDefault().ExpenseId;

#line default
#line hidden
            BeginContext(16642, 55, true);
            WriteLiteral("                                                <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 16697, "\"", 16717, 1);
#line 268 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 16705, expenseId, 16705, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(16718, 12, true);
            WriteLiteral("></option>\r\n");
            EndContext();
#line 269 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(16874, 76, true);
            WriteLiteral("                                                <option value=\"\"></option>\r\n");
            EndContext();
#line 273 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                            }
                                        

#line default
#line hidden
            BeginContext(17040, 327, true);
            WriteLiteral(@"                                    </select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Đối tượng</label>
                                <div class=""col-md-6"">
");
            EndContext();
#line 281 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                      
                                        string note = Model.ListRequestItems.FirstOrDefault().Note;
                                    

#line default
#line hidden
            BeginContext(17547, 54, true);
            WriteLiteral("                                    <input type=\"text\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 17601, "\"", 17616, 1);
#line 284 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 17609, note, 17609, 7, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(17617, 360, true);
            WriteLiteral(@" id=""ListRequestItems_Note"" name=""ListRequestItems.Note"" class=""form-control"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Đơn giá</label>
                                <div class=""col-md-6"">
");
            EndContext();
#line 290 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                      
                                        decimal? price = Model.ListRequestItems.FirstOrDefault().Price;
                                    

#line default
#line hidden
            BeginContext(18161, 78, true);
            WriteLiteral("                                    <input type=\"text\" onblur=\"CalculaTotal()\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 18239, "\"", 18278, 1);
#line 293 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 18247, price.HasValue?price.Value:0, 18247, 31, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(18279, 363, true);
            WriteLiteral(@" class=""form-control"" id=""ListRequestItems_Price"" name=""ListRequestItems.Price"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Số lượng</label>
                                <div class=""col-md-6"">
");
            EndContext();
#line 299 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                      
                                        decimal? quanti = Model.ListRequestItems.FirstOrDefault().Quanti;
                                    

#line default
#line hidden
            BeginContext(18828, 78, true);
            WriteLiteral("                                    <input type=\"text\" onblur=\"CalculaTotal()\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 18906, "\"", 18947, 1);
#line 302 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 18914, quanti.HasValue?quanti.Value:0, 18914, 33, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(18948, 380, true);
            WriteLiteral(@" class=""form-control number-divide"" id=""ListRequestItems_Quanti"" name=""ListRequestItems.Quanti"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-md-4 col-form-label"">Tổng tiền</label>
                                <div class=""col-md-6"">
");
            EndContext();
#line 308 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                      
                                        decimal? total = Model.ListRequestItems.FirstOrDefault().Total;
                                    

#line default
#line hidden
            BeginContext(19512, 133, true);
            WriteLiteral("                                    <strong id=\"lbl-total\" class=\"number-divide\" style=\"margin-top:5px;font-size:16pt;color:#0094ff\">");
            EndContext();
            BeginContext(19647, 28, false);
#line 311 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                                                                                                                                 Write(total.HasValue?total.Value:0);

#line default
#line hidden
            EndContext();
            BeginContext(19676, 502, true);
            WriteLiteral(@"</strong>
                                   
                                </div>
                            </div>
                            
                        </div>


                    </div>
                </fieldset>
            </form>
            <form id=""formrequestattach"">
                <div id=""div_load_requestattachfile""></div>
            </form>
            



        </div>
        <div class=""card-footer"">
            <div class=""text-right"">
");
            EndContext();
#line 332 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                  
                    if (Model.RequestHeader.Status == Contanst.PaymentRequesStatus_Draft)
                    {

#line default
#line hidden
            BeginContext(20312, 125, true);
            WriteLiteral("                        <input type=\"button\" value=\"Lưu\" class=\"btn btn-primary\" id=\"btn-save\" style=\"margin-right:5px;\" />\r\n");
            EndContext();
#line 336 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                    }

                    if (Model.RequestHeader.Id != 0
                        && Model.RequestHeader.Status == Contanst.PaymentRequesStatus_Draft)
                    {

#line default
#line hidden
            BeginContext(20632, 143, true);
            WriteLiteral("                        <input type=\"button\" value=\"Gửi duyệt\" class=\"btn btn-warning\" id=\"btn-sent-to-approver\" style=\"margin-right:5px;\" />\r\n");
            EndContext();
#line 342 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                    }


                    if (Model.RequestHeader.Id != 0
                        && Model.RequestHeader.Status == Contanst.PaymentRequesStatus_Waiting)
                    {

#line default
#line hidden
            BeginContext(20974, 260, true);
            WriteLiteral(@"                        <input type=""button"" value=""Duyệt"" class=""btn btn-success"" id=""btn-approve"" style=""margin-right:5px;"" />
                        <input type=""button"" value=""Từ chối"" class=""btn btn-danger"" id=""btn-reject"" style=""margin-right:5px;"" />
");
            EndContext();
#line 350 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                    }

                    if (Model.RequestHeader.Id != 0
                        && Model.RequestHeader.Status == Contanst.PaymentRequesStatus_Approved)
                    {

#line default
#line hidden
            BeginContext(21432, 251, true);
            WriteLiteral("                        <input type=\"button\" value=\"UNC\" class=\"btn btn-info\" id=\"btn-unc\" style=\"margin-right:5px;\" />\r\n                        <input type=\"button\" value=\"Từ chối\" class=\"btn btn-danger\" id=\"btn-reject\" style=\"margin-right:5px;\" />\r\n");
            EndContext();
#line 357 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                    }


                    if (Model.RequestHeader.Id != 0
                        && Model.RequestHeader.Status == Contanst.PaymentRequesStatus_Unc)
                    {

#line default
#line hidden
            BeginContext(21878, 267, true);
            WriteLiteral(@"                        <input type=""button"" value=""Hoàn Thành"" class=""btn btn-success"" id=""btn-completed"" style=""margin-right:5px;"" />
                        <input type=""button"" value=""Từ chối"" class=""btn btn-danger"" id=""btn-reject"" style=""margin-right:5px;"" />
");
            EndContext();
#line 365 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                    }



                

#line default
#line hidden
            BeginContext(22193, 1861, true);
            WriteLiteral(@"
            </div>
           
        </div>
    </div>


</section>


<div class=""modal fade show"" data-backdrop=""static"" id=""modal-reject-credit"" aria-modal=""true"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Từ chối</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">×</span>
                </button>
            </div>
            <div class=""modal-body"">

                <div class=""row"">
                    <label class=""col-md-6 control-label"">Ghi chú lý do từ chối</label>
                    <div class=""col-md-6"">
                        <input type=""text"" class=""form-control"" id=""txt-note"" />
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-warning"" id=""b");
            WriteLiteral(@"tn-reject"">OK</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class=""modal fade show"" id=""modal-attach-upload"" aria-modal=""true"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Đính kèm file</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">×</span>
                </button>
            </div>
            <div class=""modal-body"">
                <form id=""formattact"" name=""formattact"" class=""form-horizontal"" action=""/PaymentRequest/UploadAttachForRequestPayment"" method=""post"" enctype=""multipart/form-data"">
                    ");
            EndContext();
            BeginContext(24056, 23, false);
#line 419 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
                Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(24080, 88, true);
            WriteLiteral("\r\n                    <input type=\"hidden\" id=\"paymentRequestId\" name=\"paymentRequestId\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 24168, "\"", 24201, 1);
#line 420 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\PaymentRequest\RequestDetail.cshtml"
WriteAttributeValue("", 24176, Model.RequestHeader.Id, 24176, 25, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(24202, 1405, true);
            WriteLiteral(@" />
                    <input type=""hidden"" id=""profileSuggestId"" name=""profileSuggestId"" />
                    <input type=""file"" name=""postedFile"" />
                    <input type=""submit"" value=""Upload"" class=""btn btn-sm btn-success"" />
                </form>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<div class=""modal modal-blur fade"" id=""modal_attach_UNC"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog "" id=""form_attach_UNC"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""uploadModalLabel"">Tải lên UNC</h5>

            </div>
            <div class=""modal-body"">
                <form>
                    <div class=""mb-3"">
                        <label for=""fileInput"" class=""form-label"">Chọn file</label>
                        <input class=""form-");
            WriteLiteral(@"control"" type=""file"" id=""fileInput""  >
                    </div>
                </form>
            </div>
            <div class=""modal-footer"">
                <input type=""button"" class=""btn btn-warning"" id=""btn-attach-unc-action"" value=""OK"" />&nbsp;<input type=""button"" value=""Đóng"" class=""btn btn-default""/>
            </div>
        </div>
    </div>
</div>


");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(25624, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(25630, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "310e25ec66e89c6d6f431d285fb3bb4620e7e3b547884", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25677, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(25683, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "310e25ec66e89c6d6f431d285fb3bb4620e7e3b549142", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25751, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(25757, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "310e25ec66e89c6d6f431d285fb3bb4620e7e3b550400", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25820, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(25826, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "310e25ec66e89c6d6f431d285fb3bb4620e7e3b551658", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25902, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(25908, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "310e25ec66e89c6d6f431d285fb3bb4620e7e3b552916", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(25991, 21146, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            $(""#btn-chose-thanhtoan-item"").click(function () {
                $(""#modal-attach-upload"").modal();
            });


            $(""#btn-save"").click(function ()
            {
                saveRequest();
            });

            $(""#ListRequestItems_ProjectId"").change(function () {
                let projectId = $(this).val();
                GetProjectInfo(projectId);
                GetActivitiesByProject(projectId);
            });

            $(""#ListRequestItems_ActivityId"").change(function () {
                let actId = $(this).val();
                GetExpenseByActivity(actId);
            });


            InitDataOnload();

            $(""#ListRequestItems_ExpenseId"").change(function () {
                let projectId = $(""#ListRequestItems_ProjectId"").val();
                let actId = $(""#ListRequestItems_ActivityId"").val();
                let expenseId = $(this).val();

                ");
                WriteLiteral(@"let requestId = $(""#RequestHeader_Id"").val();
                LoadAttachRequestFile(requestId, projectId, actId, expenseId);
            });
            



            $(""#btn-sent-to-approver"").click(function () {
                ChangeStatus(""waiting"");
            });

            $(""#btn-approve"").click(function () {
                ChangeStatus(""approved"");
            });


            $(""#btn-unc"").click(function () {
                ChangeStatus(""unc"");
            });

            $(""#btn-completed"").click(function () {
                ChangeStatus(""completed"");
            });

            $(""#btn-reject"").click(function () {
                let noteReject = $(""#txt-note"").val();
                if (noteReject == """" || noteReject == null) {
                    bootbox.alert(AlertFail(""Vui lòng ghi chú lý do từ chối""));
                } else {
                    ChangeStatus(""rejected"");
                }

            });


          

            $(""#btn-attac");
                WriteLiteral(@"h-unc-action"").click(function () {
                attachUNC();
            });

        });

        function validateSaveRequest() {
            var resutlValid = $(""#form-paymentrequest"").validate({
                rules: {
                    ""ListRequestItems.ProjectId"": ""required"",
                    ""ListRequestItems.ActivityId"": ""required"",
                    ""ListRequestItems.ExpenseId"": ""required"",
                    ""ListRequestItems.Quanti"": ""required"",
                    ""ListRequestItems.Price"": ""required"",
                },
                messages: {
                    ""ListRequestItems.ProjectId"": ""Bắt buộc"",
                    ""ListRequestItems.ActivityId"": ""Bắt buộc"",
                    ""ListRequestItems.ExpenseId"": ""Bắt buộc"",
                    ""ListRequestItems.Quanti"": ""Bắt buộc"",
                    ""ListRequestItems.Price"": ""Bắt buộc"",
                }
            }).form();
            return resutlValid;
        }

        function ValidateUploadA");
                WriteLiteral(@"ttachs()
        {
            let countEmptyAttach = 0;
            $('#table-payment-request-attach tr.tr_attach').each(function ()
            {
                let attachName = $(this).find(""td"").eq(5).html();
                if (attachName == """" || attachName == null)
                {
                    countEmptyAttach = countEmptyAttach + 1;
                }
                  
            });
            return countEmptyAttach; 
        }



        function saveRequest() {

            var valid = validateSaveRequest();
            if (valid) {

                let invalidAttach = ValidateUploadAttachs();
       
                if (invalidAttach == 0) {

                    var headerRequestData = FormToObject(""#form-paymentrequest"", ""RequestHeader."");
                    headerRequestData.DateRequest = ConverFormatDate($(""#RequestHeader_DateRequest"").val());

                    let lstItems = [];
                    var itemRequestData = FormToObject(""#form-payment");
                WriteLiteral(@"request"", ""ListRequestItems."");

                    let itemObject = {
                        ""Id"": itemRequestData.Id,
                        ""RequestId"": itemRequestData.RequestId,
                        ""ProjectId"": itemRequestData.ProjectId,
                        ""ActivityId"": itemRequestData.ActivityId,
                        ""ExpenseId"": itemRequestData.ExpenseId,
                        ""Quanti"": DeRenderNumerFormat(itemRequestData.Quanti),
                        ""Price"": DeRenderNumerFormat(itemRequestData.Price),
                        ""Note"": itemRequestData.Note
                    };


                    lstItems.push(itemObject);

                    var saveData = {
                        ""RequestHeader"": headerRequestData,
                        ""ListRequestItems"": lstItems
                    };
                    $.ajax({
                        type: ""POST"",
                        contentType: 'application/json; charset=utf-8',
                        url");
                WriteLiteral(@": ""/PaymentRequest/SavePaymentRequest"",
                        dataType: 'json',
                        data: JSON.stringify(saveData),
                        beforeSend: function () {
                            ShowWaiting();
                        },
                        success: function (res) {
                            HideWaiting();
                            if (res.isSuccess === true) {
                                bootbox.alert(AlertSuccess(""Lưu dữ liệu thành công""), function () {

                                    location.href = ""/PaymentRequest/RequestDetail/"" + res.longValReturn;
                                });
                            } else {
                                bootbox.alert(AlertFail(res.errorMessage));
                            }
                            lstItems = [];
                        }
                    });



                }// end if invalid attach
                else {
                    bootbox.alert(AlertFail(");
                WriteLiteral(@"""Còn tài liệu chưa đính kèm""));
                }
                


            }// end if valid input

        }
        function FormatNumberDevide() {
            $('.number-divide').divide({
                delimiter: ',',
                divideThousand: true,
                delimiterRegExp: /[\.\,\s]/g

            });
        }


        function GetProjectInfo(projetId) {
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/PaymentRequest/GetProjectById?projectId="" + projetId,
                success: function (result) {

                    $(""#txt-projectcode"").val(result.projectCode);
                    $(""#txt-from-projectdate"").val(RenderFormatDate(result.timeStart));
                    $(""#txt-to-projectdate"").val(RenderFormatDate(result.timeEnd));
                    $(""#txt-base-on-law"").val(result.legalBasis);
                    $(""#txt-hanmuc"").val(result.totalAmount);
      ");
                WriteLiteral(@"              $(""#txt-note-project"").val(result.notes);
                }
            });
        }


        function GetActivitiesByProject(projetId) {
            debugger;
            let actiSelected = $(""#ListRequestItems_ActivityId"").val();
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/PaymentRequest/GetActivityByProject?projectId="" + projetId,
                success: function (result) {

                    let htmlAct = ""<option value=''>Chọn nhóm hoạt động</option>"";
                    $.each(result, function (key, value)
                    {
                        let selectedAct = actiSelected == value.id ? ""selected='selected'"" : """";
                        htmlAct = htmlAct + ""<option "" + selectedAct+"" value='"" + value.id + ""'>"" + value.name +""</option>"";
                    });
                    $(""#ListRequestItems_ActivityId"").html(htmlAct);
                }
            });");
                WriteLiteral(@"
        }
        function GetExpenseByActivity(activityId) {

            let requestId = $(""#RequestHeader_Id"").val();
            let projectId = $(""#ListRequestItems_ProjectId"").val();
            let expsenseSelected = $(""#ListRequestItems_ExpenseId"").val();
            LoadAttachRequestFile(requestId, projectId, activityId, expsenseSelected);
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/PaymentRequest/GetExpenseByActivity?activityId="" + activityId,
                success: function (result) {

                    let htmlExp = ""<option value=''>Chọn mục chi</option>"";
                    $.each(result, function (key, value) {
                        let selectedExp = expsenseSelected == value.id ? ""selected='selected'"" : """";
                        htmlExp = htmlExp + ""<option "" + selectedExp + "" value='"" + value.id + ""'>"" + value.name + ""</option>"";
                    });
                   ");
                WriteLiteral(@" $(""#ListRequestItems_ExpenseId"").html(htmlExp);
                    
                }
            });
        }


        function InitDataOnload() {
            let projectId = $(""#ListRequestItems_ProjectId"").val();
            if (projectId > 0)
            {
                GetProjectInfo(projectId);
                GetActivitiesByProject(projectId);
                let activityId = $(""#ListRequestItems_ActivityId"").val();
                GetExpenseByActivity(activityId);
                CalculaTotal();
                let expsenseId = $(""#ListRequestItems_ExpenseId"").val();

                let requestId = $(""#RequestHeader_Id"").val();
                LoadAttachRequestFile(requestId, projectId, activityId, expsenseId);
                ListAttachUNC();
            }
        }

        function CalculaTotal() {
            let price = $(""#ListRequestItems_Price"").val();
            let quanti = $(""#ListRequestItems_Quanti"").val();
            let total = (price * quanti);
    ");
                WriteLiteral(@"        $(""#lbl-total"").html(RenderNumerFormat(total));
            
        }
        function LoadAttachRequestFile(requestId,projectId,activityId,expenseId) {
            ShowWaiting();
            $(""#div_load_requestattachfile"").load(""/PaymentRequest/_PaymentRequestApproveCheckist?requestId="" + requestId
                + ""&projectId="" + projectId
                + ""&actityId="" + activityId
                + ""&expenseId="" + expenseId, function (){
                    ValidApproveStep();
                HideWaiting();
            });
        }


        function ChangeStatus(statusCode) {


            let validChange = true;
            if (statusCode == ""unc"")
            {
                validChange = validateAttachUNC();
            }

            if (validChange == true) {
                let modelChangeStatus = {
                    ""requestId"": parseFloat($(""#RequestHeader_Id"").val()),
                    ""status"": statusCode,
                    ""userName"": """",
      ");
                WriteLiteral(@"              ""note"": $(""#txt-note"").val()
                }

                $.ajax({
                    type: ""POST"",
                    contentType: 'application/json; charset=utf-8',
                    url: ""/PaymentRequest/ChangePaymentRequestStatus"",
                    dataType: 'json',
                    data: JSON.stringify(modelChangeStatus),
                    beforeSend: function () {
                        ShowWaiting();
                    },
                    success: function (res) {
                        HideWaiting();
                        if (res.isSuccess === true) {
                            bootbox.alert(AlertSuccess(""Chuyển trạng thái thành công""), function () {

                                location.href = ""/PaymentRequest/RequestDetail/"" + modelChangeStatus.requestId;
                            });

                        } else {
                            bootbox.alert(AlertFail(res.errorMessage));
                        }

              ");
                WriteLiteral(@"      }
                });
            } else {
                bootbox.alert(AlertFail(""Bạn chưa đính kèm UNC""));
            }



           

        }

        function openUploadForm(suggestProfileId)
        {
            $(""#profileSuggestId"").val(suggestProfileId);
            $(""#modal-attach-upload"").show();
        }

     
        function DeleteAttachment(attachId) {

            var conf = bootbox.confirm(""Bạn có chắc muốn file đính kèm này?"", function () {
                if (conf) {
                    $.ajax({
                        type: ""GET"",
                        contentType: 'application/json; charset=utf-8',
                        url: ""/FileUpload/DeleteFile/"" + attachId,
                        success: function (result) {
                            bootbox.alert(AlertSuccess(""Đã xoá thành công""), function ()
                            {
                                let requestId = $(""#RequestHeader_Id"").val();
                                l");
                WriteLiteral(@"et projectId = $(""#ListRequestItems_ProjectId"").val();
                                let activityId = $(""#ListRequestItems_ActivityId"").val();
                                let expsenseId = $(""#ListRequestItems_ExpenseId"").val();
                                LoadAttachRequestFile(requestId, projectId, activityId, expsenseId);
                            });

                        }
                    });
                }
            });


        }

       




        function DownloadFile(attachId) {


            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/CreditRequest/DownloadAttachFile?attachId="" + attachId,
                success: function (r) {

                    //Convert Base64 string to Byte Array.
                    var bytes = Base64ToBytes(r);

                    //Convert Byte Array to BLOB.
                    var blob = new Blob([bytes], { type: ""application/octetst");
                WriteLiteral(@"ream"" });

                    //Check the Browser type and download the File.
                    var isIE = false || !!document.documentMode;
                    if (isIE) {
                        window.navigator.msSaveBlob(blob, fileName);
                    } else {
                        var url = window.URL || window.webkitURL;
                        link = url.createObjectURL(blob);
                        var a = $(""<a />"");
                        a.attr(""download"", fileName);
                        a.attr(""href"", link);
                        $(""body"").append(a);
                        a[0].click();
                        $(""body"").remove(a);
                    }

                }
            });



        }

        function Base64ToBytes(base64) {
            var s = window.atob(base64);
            var bytes = new Uint8Array(s.length);
            for (var i = 0; i < s.length; i++) {
                bytes[i] = s.charCodeAt(i);
            }
            re");
                WriteLiteral(@"turn bytes;
        };




        function ApproveStepChecklist(paymentProfileId,stepId) {

            let modelApprove = {
                ""RequestId"": parseFloat($(""#RequestHeader_Id"").val()),
                ""ProfileAttachId"": paymentProfileId,
                ""StepChecklistId"": stepId
            }

            $.ajax({
                type: ""POST"",
                contentType: 'application/json; charset=utf-8',
                url: ""/PaymentRequest/ApproveStepChecklist"",
                dataType: 'json',
                data: JSON.stringify(modelApprove),
                beforeSend: function () {
                   // ShowWaiting();
                },
                success: function (res) {
                   // HideWaiting();
                    if (res.isSuccess === true)
                    {
                        ValidApproveStep();
                        toastr.success('Cập nhật thành công','Thành công', { positionClass: ""toast-top-center"" });

                  ");
                WriteLiteral(@"  } else {
                        toastr.error('Có lỗi khi duyệt kiểm tra', 'Lỗi', { positionClass: ""toast-top-center"" });
                    }
                    
                }
            });

        }




        function ValidApproveStep()
        {
            debugger;
            let stepCount = 0;
            let stepChecked = 0;
            $('#table-payment-request-attach .ck-step-approve').each(function ()
            {
                stepCount = stepCount +1;
                var isChecked = $(this).prop('checked');
                if (isChecked)
                {
                    stepChecked = stepChecked + 1;
                }
                
            });

            if (stepChecked == stepCount) {
                $(""#btn-approve"").show();
            } else {
                $(""#btn-approve"").hide();
            }

      

        }


        function attachUNC() {
            var formData = new FormData();
            var fileInput = doc");
                WriteLiteral(@"ument.getElementById('fileInput');
            var file = fileInput.files[0];
            if (file == undefined) {

                Swal.fire({
                    title: ""Vui lòng chọn file!"",
                    icon: ""error""
                });
                return;
            }

            let requestId = $(""#RequestHeader_Id"").val();

            formData.append('file', file);
            formData.append('paymentRequestId', requestId.toString());
            $.ajax({
                url: '/PaymentRequest/AttachUNC',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    ShowWaiting();
                },
                complete: function () {
                    HideWaiting();
                },
                success: function (response) {


                    if (response.status = ""Success"") {

                        toastr.s");
                WriteLiteral(@"uccess('Đính kèm UNC thành công', { positionClass: ""toast-top-center"" });
                        $(""#modal_attach_UNC"").modal(""hide"");
                    } else {
                        toastr.success('Đính kèm UNC thất bại', { positionClass: ""toast-top-center"" });
                    }
                    ListAttachUNC();


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        title: jqXHR.responseText,
                        icon: ""error""
                    });
                }
            });
        }


        function ListAttachUNC() {
            let requestId = $(""#RequestHeader_Id"").val();
            ShowWaiting();
            $(""#load-unc-attach"").load(""/paymentrequest/_PartialGetAttachUNC?requestId="" + requestId, function () {
                $(""#btn-open-modal-unc"").click(function () {
                    $(""#modal_attach_UNC"").modal();
                });
                HideWa");
                WriteLiteral(@"iting();
            });
        }

        function validateAttachUNC()
        {
            let attachUNCName = """";
            $('#table-unc-attc tr.tr-unc-file-name').each(function () {
                attachUNCName = $(this).find(""td"").eq(0).html();
               
            });
            if (attachUNCName != null && attachUNCName != undefined && attachUNCName != """")
            {
                return true;
            } else {
                return false;
            }
        }



        function DeleteUNCAttachment(attachId) {

            let statusRequest = $(""#RequestHeader_Status"").val();
            if (statusRequest == ""draft"" || statusRequest == ""draft"" || statusRequest == ""approved"") {
                var conf = bootbox.confirm(""Bạn có chắc muốn file đính kèm UNC này?"", function () {
                    if (conf) {
                        $.ajax({
                            type: ""GET"",
                            contentType: 'application/json; charset=u");
                WriteLiteral(@"tf-8',
                            url: ""/PaymentRequest/DeleteAttachmentUNC?attachId="" + attachId,
                            success: function (result) {
                                bootbox.alert(AlertSuccess(""Đã xoá thành công""), function () {
                                    ListAttachUNC();

                                });

                            }
                        });
                    }
                });
            } else {
                bootbox.alert(AlertFail(""Yêu cầu ở trạng thái đã ủy nhiệm chi hoặc hoàn thành thì không xóa UNC được !""));
            }

            


        }


    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DAL.Models.PaymentRequqest.RequestViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
