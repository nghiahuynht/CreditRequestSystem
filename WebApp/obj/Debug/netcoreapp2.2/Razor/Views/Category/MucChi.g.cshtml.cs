#pragma checksum "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c1d315ce966c3fc2ada1ca84a81bb34806ec2895"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_MucChi), @"mvc.1.0.view", @"/Views/Category/MucChi.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Category/MucChi.cshtml", typeof(AspNetCore.Views_Category_MucChi))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
using System.Security.Claims;

#line default
#line hidden
#line 2 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
using WebApp.ExcelHelper;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1d315ce966c3fc2ada1ca84a81bb34806ec2895", @"/Views/Category/MucChi.cshtml")]
    public class Views_Category_MucChi : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<DAL.Models.ComboBoxModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/TemplateImportExpense.xlsx"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatable/jquery.datatable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-fixedcolumns/js/dataTables.fixedColumns.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/mdb-treeview/forms-free.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/mdb-treeview/scrolling-navbar.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/mdb-treeview/treeview.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/mdb-treeview/wow.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
  
    ViewData["Title"] = "Danh sách mục chi";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string Permission = User.Claims.FirstOrDefault(x => x.Type == "Permission").Value;
    bool isDelete = AuthHelper.GetPermissionHelper(Permission).Contains(PermissionHelper.MucChi.Delete);
    bool isAdd = AuthHelper.GetPermissionHelper(Permission).Contains(PermissionHelper.MucChi.Add);
    bool isEdit = AuthHelper.GetPermissionHelper(Permission).Contains(PermissionHelper.MucChi.Edit);

#line default
#line hidden
            DefineSection("styles", async() => {
                BeginContext(610, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(618, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c1d315ce966c3fc2ada1ca84a81bb34806ec28958665", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(705, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(711, 98, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c1d315ce966c3fc2ada1ca84a81bb34806ec28959997", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(809, 564, true);
                WriteLiteral(@"
    <style>
        .div-member {
            margin-left: 20px;
        }

            .div-member .nav .nav-link {
                margin: 4px 0 !important;
            }

        .card .nav.flex-column > li {
            border-bottom: 0px;
        }

        .span-team-name {
            font-weight: bold
        }

        .i-edit-saleteam {
            color: #555;
        }

        .i-delete-saleteam {
            color: #ff0000;
        }

        .typeahead {
            width: 100% !important;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(1376, 157, true);
            WriteLiteral("<section class=\"content-header\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n                <h1>");
            EndContext();
            BeginContext(1535, 17, false);
#line 50 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(1553, 254, true);
            WriteLiteral("</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <ol class=\"breadcrumb float-sm-right\">\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Trang chủ</a></li>\r\n                    <li class=\"breadcrumb-item active\">");
            EndContext();
            BeginContext(1809, 17, false);
#line 55 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                                                   Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(1827, 965, true);
            WriteLiteral(@"</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class=""content"">

    <div class=""row"">

        <div class=""col-sm-12"">
            <div class=""card"">
                <div class=""card-header"">
                    <div class=""row"">

                        <div class=""col-sm-3"">
                            <label>Mã mục chi</label>
                            <input type=""text"" class=""form-control"" id=""txtMa"" />
                        </div>
                        <div class=""col-sm-3"">
                            <label>Tên mục chi</label>
                            <input type=""text"" class=""form-control"" id=""txtTen"" />
                        </div>
                        <div class=""col-sm-3"">
                            <button onclick=""SearchMucChi()"" class=""btn btn-filter btn-sm btn-primary""><i class=""fa fa-search""></i>&nbsp;Tìm kiếm</button>


");
            EndContext();
#line 82 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                             if (isAdd == true)
                            {

#line default
#line hidden
            BeginContext(2872, 383, true);
            WriteLiteral(@"                                <button id=""btn-createNV"" class=""btn btn-filter btn-sm btn-success"" onclick=""showModalCreateExpense(0)""><i class=""fa fa-plus-circle""></i>&nbsp;Thêm mới</button>
                                <button id=""btn-createNV"" class=""btn btn-filter btn-sm btn btn-primary"" onclick=""showModalImport()""><i class=""fas fa-file-import""></i>&nbsp;Import</button>
");
            EndContext();
#line 86 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                            }

#line default
#line hidden
            BeginContext(3286, 1898, true);
            WriteLiteral(@"                        </div>

                    </div>
                </div>

                <div class=""card-body "">
                    <table class=""table table-bordered table-hover dataTable"" id=""table-expense"" width=""100%"">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Nhóm hoạt động</th>
                                <th>Mã mục chi</th>
                                <th>Tên mục chi</th>
                                <th>Ghi chú</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>

    </div>


</section>


<!--modal add-->
<div class=""modal modal-blur fade"" id=""modal_add_expense"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog modal");
            WriteLiteral(@"-xl"" id=""dailog_expense"">

    </div>
</div>


<!--modal add-->
<div class=""modal modal-blur fade"" id=""modal_add_paymentinfo"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog modal-xl"" id=""dailog_paymentinfo"">

    </div>
</div>

<!--modal import-->
<div class=""modal modal-blur fade"" id=""modal_import_expense"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog "" id=""form_import_expense"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""uploadModalLabel"">Tải lên dữ liệu mục chi</h5>

            </div>
            <div class=""modal-body"">
                <p><strong>Bước 1:</strong> Tải file mẫu tại đây - ");
            EndContext();
            BeginContext(5184, 82, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289517117", async() => {
                BeginContext(5254, 8, true);
                WriteLiteral("File mẫu");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5266, 5022, true);
            WriteLiteral(@"</p>
                <p><strong>Bước 2:</strong> Tải lên file dữ liệu mẫu phía trên</p>
                <p class=""text-danger""><strong>Lưu ý:</strong> Không thay đổi header của file mẫu</p>
                <form>
                    <div class=""mb-3"">
                        <label for=""fileInput"" class=""form-label"">Chọn file</label>
                        <input class=""form-control"" type=""file"" id=""fileInput"" accept="".xls, .xlsx"" onchange=""readFileImport()"">
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<!--modal read import-->

<div id=""cntModalListExpense"">
    <div class=""modal fade"" id=""ListExpenseModal"" tabindex=""-1"" aria-labelledby=""ListExpenseModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
        <div class=""modal-dialog modal-xl"">
            <div class=""modal-content"">
                <div class=""modal-header pt-2 pb-2"">
                    <h5 class=""modal-title"" id=""ListExpenseModalLabel");
            WriteLiteral(@""">Tải lên dữ liệu nhóm mục chi</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Đóng"">
                        <span aria-hidden=""true"">
                            <i class=""fa fa-times""></i>
                        </span>
                    </button>
                </div>
                <div class=""modal-body"" style=""height: calc(100vh - 200px);overflow:scroll"">
                    <div class=""row mb-2"">
                        <div class=""col-xl-12 col-lg-12 col-md-12 col-12"">
                            <table class=""table table-root"">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type=""checkbox"" name=""checkAllRow"" checked=""checked"">
                                        </th>
                                        <th scope=""col"">Mã nhóm</th>
                                        <th scope=""col"" class="""">T");
            WriteLiteral(@"ên nhóm</th>
                                        <th scope=""col"" class="""">Nhóm hoạt động</th>
                                        <th scope=""col"" class="""">Ghi chú</th>

                                    </tr>
                                </thead>
                                <tbody id=""lst-data-info"">
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer-custom"">
                    <div class=""footer-left col-6"">
                        <label>Số lượng dòng đã chọn: </label>
                        <span id=""sumcheck""></span>
                    </div>

                    <div class=""footer-right col-6 pb-3"">
                        <button type=""button"" class=""btn btn-primary"" onclick=""ImportMucChi()"">Import nhóm mục chi</button>
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng");
            WriteLiteral(@"</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--modal result import-->
<div id=""cntModalResultImport"">
    <div class=""modal fade"" id=""ListExpenseModalResultImport"" tabindex=""-1"" aria-labelledby=""ListExpenseModalResultImportLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
        <div class=""modal-dialog modal-xl"">
            <div class=""modal-content"">
                <div class=""modal-header pt-2 pb-2"">
                    <h5 class=""modal-title"" id=""ListNVModalResultImportLabel"">Kết Quả Import</h5>

                </div>
                <div class=""modal-body"" style=""height: calc(100vh - 200px);overflow:scroll"">
                    <div class=""row mb-2"">
                        <div class=""col-xl-12 col-lg-12 col-md-12 col-12"">
                            <table class=""table table-root"" id=""table-root-result-import"">
                                <thead>
                                    ");
            WriteLiteral(@"<tr>

                                        <th scope=""col"">Mã mục chi</th>
                                        <th scope=""col"" class="""">Tên mục chi</th>
                                        <th scope=""col"" class="""">Trạng thái</th>

                                    </tr>
                                </thead>
                                <tbody id=""lst-data-info"">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer-custom"">


                    <div class=""footer-right col-6 pb-3"">

                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""closeModalResultImport()"">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(10305, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10311, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289523996", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10374, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10380, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289525254", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10456, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10462, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289526512", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10549, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(10557, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289527774", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10617, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10623, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289529032", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10689, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10695, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289530290", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10753, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10759, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289531549", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10812, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10818, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c1d315ce966c3fc2ada1ca84a81bb34806ec289532808", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10865, 39, true);
                WriteLiteral("\r\n    <script>\r\n        const isEdit = ");
                EndContext();
                BeginContext(10905, 27, false);
#line 260 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                  Write(isEdit.ToString().ToLower());

#line default
#line hidden
                EndContext();
                BeginContext(10932, 28, true);
                WriteLiteral(";\r\n        const isDelete = ");
                EndContext();
                BeginContext(10961, 29, false);
#line 261 "F:\Projects\OnGIT\CreditRequestSystem\WebApp\Views\Category\MucChi.cshtml"
                    Write(isDelete.ToString().ToLower());

#line default
#line hidden
                EndContext();
                BeginContext(10990, 23353, true);
                WriteLiteral(@";
        var lstCbPaymentProfile = [];
        var tableId = ""#table-expense"";
        var ajaxURL = ""/Category/GetDataExpense"";
        var columnData = [
            { ""data"": ""id"", visible: false },
            { ""data"": ""activeGroupName"" },
            { ""data"": ""code"" },
            { ""data"": ""name"" },
            { ""data"": ""notes"" },
            {
                ""data"": ""id"", ""render"": function (data, type, row, meta) {
                    return RenderTableAction(data);
                }
            },


        ];



        $(document).ready(function () {

            SearchMucChi();


        });
        function RenderTableAction(id) {
            let html = `<div class='div-table-action'>`;

            // Check if Edit action should be added
            if (isEdit) {
                html += `<i class='fa fa-edit' onclick='showModalCreateExpense(${id})' title='sửa'></i>&nbsp`;
            }

            // Check if Delete action should be added
            if ");
                WriteLiteral(@"(isDelete) {
                html += `<i class='fa fa-trash' onclick='DeleteExpense(${id})' title='xóa'></i>`;
            }
            html += `<i class='fa fa-eye' onclick='showModalCreatePaymentInfo(${id})' title='xóa'></i>`
            html += `</div>`;
           
            return html;

        }

        function SearchMucChi() {

            var dataSearch = {
                Code: $(""#txtMa"").val(),
                Name: $(""#txtTen"").val()
            };
            GenrateDataTableSearch(tableId, ajaxURL, columnData, dataSearch);

        }

        function showModalCreateExpense(id) {
            $.ajax({
                url: '/Category/_AddMucChi/' + id, // Đảm bảo đường dẫn này đúng với action của bạn
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id ""dailog_nv""
                    $('#dailog_expense').html(response);

                    // Hiển thị modal
                    $(""#m");
                WriteLiteral(@"odal_add_expense"").modal(""show"")
                },
                error: function (xhr, status, error) {
                    console.error(""Có lỗi khi tải nội dung modal: "", error);
                    alert(""Lỗi tải modal, vui lòng thử lại sau."");
                }
            });
        }

        function CreateExpense() {

            var isValidate = validateData();

            if (isValidate == true) {


                var dataPost = {
                    Id: $(""#a_expense_id"").val(),
                    ActiveGroupId: $(""#a_nhom_hoat_dong"").val(),
                    Code: $(""#a_code"").val(),
                    Name: $(""#a_name"").val(),
                    Notes: $(""#a_ghi_chu"").val(),
                };
                $.ajax({
                    type: ""POST"",
                    contentType: 'application/json; charset=utf-8',
                    url: ""/Category/CreateExpense"",
                    dataType: 'json',
                    data: JSON.stringify(dataPost),");
                WriteLiteral(@"
                    beforeSend: function () {

                    },
                    success: function (res) {
                        if (res.isSuccess === true) {
                            toastr.success('Thêm nhóm hoạt động thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                            SearchMucChi();
                            $(""#modal_add_expense"").modal(""hide"")
                        } else {
                            toastr.error(res.errorMessage, 'Lỗi', { positionClass: ""toast-top-center"" });
                        }

                    }
                });
            }
        }

        function validateData() {
            var resultValid = $(""#frmCreateExpense"").validate({
                rules: {
                    ""nhom_hoat_dong"": {
                        required: true,
                    },
                    ""code"": {
                        required: true,
                    },
                    ""name"": {
  ");
                WriteLiteral(@"                      required: true,
                    }

                },
                messages: {
                    ""nhom_hoat_dong"": ""Nhóm hoạt động không được để trống!"",
                    ""code"": ""Mã không được để trống!"",
                    ""name"": ""Tên không được để trống!""
                },

            }).form();

            return resultValid;
        }

        function closeModal_Expense() {

            $(""#modal_add_expense"").modal(""hide"")

        }

        function DeleteExpense(id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: ""Bạn sẽ không thể hoàn tác hành động này!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
              ");
                WriteLiteral(@"      // call ajax delete
                    $.ajax({
                        url: '/Category/DeleteExpense',
                        type: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Mục chi đã được xóa thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                                SearchMucChi();
                            }
                            else {
                                console.error(response);
                                toastr.error('Có lỗi xảy ra khi mục chi hoạt động !', 'Lỗi', { positionClass: ""toast-top-center"" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(""Có lỗi khi tải nội dung modal: "", error);
          ");
                WriteLiteral(@"                  alert(""Lỗi tải modal, vui lòng thử lại sau."");
                        }
                    });

                }
            });
        }

        function showModalCreatePaymentInfo(id) {
            $.ajax({
                url: '/Category/_AddThongTinThanhToanMucChi/' + id,
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id ""dailog_nv""
                    $('#dailog_paymentinfo').html(response);

                    // Hiển thị modal
                    $(""#modal_add_paymentinfo"").modal(""show"")
                },
                error: function (xhr, status, error) {
                    console.error(""Có lỗi khi tải nội dung modal: "", error);
                    alert(""Lỗi tải modal, vui lòng thử lại sau."");
                }
            });
        }

        //--------------HS Thanh Toán ---------------
        function AddFormPaymentProfile() {
            console.log(""lst");
                WriteLiteral(@"CbPaymentProfile"", lstCbPaymentProfile)
            // Generate a unique random number
            var randomId = Date.now();

            var htmlcb = ""<option></option>"";
           
            lstCbPaymentProfile.forEach((item) => {
                htmlcb += `<option value=""${item.id}"" data-code=${item.code} data-isRequired=${item.isRequiredDoc}>${item.name}</option>`
            })
            var htmthstt = ` <tr>
                                    <td>
                                            <select class=""form-control"" id=""cb_hs_thanh_toan_${randomId}"" onchange=""handleCBPaymentProfile(event, ${randomId})"" >
                                            ${htmlcb}
                                            </select>
                                        
                                    </td>
                                    <td>
                                          <textarea name=""ten_hs_thanh_toan"" id=""a_ten_hs_thanh_toan_${randomId}"" class=""form-control"" ></textarea>");
                WriteLiteral(@"
                                    </td>
                                    <td>
                                        <textarea name=""ghi_chu_hs_thanh_toan"" iid=""a_ghi_chu_hs_thanh_toan_${randomId}""  class=""form-control"" ></textarea>
                                    </td>
                                    <td>
                                        <input type=""file"" name=""tep_dinh_kem"" onchange=""uploadFilePaymentInfo(this, ${randomId})"" />
                                         <input type=""hidden"" name=""tep_dinh_kem_hs_thanh_toan"" id=""a_tep_dinh_kem_hs_thanh_toan_${randomId}"" value=""-1"" />
                                    </td>
                                    <td style=""text-align:center;"">
                                        <span class=""fa fa-check"" onclick=""SaveExpensePaymentProfile(${randomId})""></span>
                                        <span class=""fa fa-trash"" onclick=""RemoveExpensePaymentProfile(${randomId})""></span>
                                    </td>");
                WriteLiteral(@"
                                 </tr>`;
            $('#table_thong_tin_hs_thanh_toan').append(htmthstt);
        }

        function uploadFilePaymentInfo(input, id) {
            const file = input.files[0]; // Lấy file được chọn
            if (file) {
                // Upload file
                const fileData = new FormData();
                fileData.append('file', file);

                $.ajax({
                    url: '/FileUpload/UploadFile', // Đường dẫn đến API xử lý file
                    type: 'POST',
                    data: fileData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success == true && response.fileNameAttactId > 0) {
                            $(`#a_tep_dinh_kem_hs_thanh_toan_${id}`).val(response.fileNameAttactId);
                            toastr.success('Tải file thành công!', 'Thành công', { positionClass: ""toast-top-center"" }");
                WriteLiteral(@");
                        }
                        else {
                            toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: ""toast-top-center"" });
                        }


                    },
                    error: function () {
                        toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: ""toast-top-center"" });
                    }
                });
            }
        }

        function RemoveExpensePaymentProfile(Id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: ""Bạn sẽ không thể hoàn tác hành động này!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax
                  ");
                WriteLiteral(@"  $.ajax({
                        url: '/Category/DeleteExpensePaymentProfile',
                        type: 'GET',
                        data: {
                            Id: Id
                        },
                        contentType: 'application/json',
                        success: function (response) {
                            if (response.success) {

                                $(`span.fa-trash[onclick=""RemoveExpensePaymentProfile(${Id})""]`).closest('tr').remove();
                                toastr.success('Xóa thông tin hồ sơ thành công!', 'Thành công');
                            }
                            else {

                                toastr.error('Xóa thông tin hồ sơ  thất bại!', 'Lỗi');
                            }
                        },
                        error: function (xhr, status, error) {

                            alert('Có lỗi khi gửi yêu cầu!');
                        }
                    });

                }");
                WriteLiteral(@"
            });

        }

        function SaveExpensePaymentProfile(profileId) {

            // Find the row that contains the clicked icon
            var row = $(`span.fa-check[onclick=""SaveExpensePaymentProfile(${profileId})""]`).closest('tr');

            // Retrieve values from the inputs in the row
            var nameInput = row.find('textarea[name=""ten_hs_thanh_toan""]');
            var notes = row.find('textarea[name=""ghi_chu_hs_thanh_toan""]');
            var fileInput = row.find('input[name=""tep_dinh_kem""]');
            var fileAttachInput = row.find('input[name=""tep_dinh_kem_hs_thanh_toan""]');
            var name = nameInput.val();
            var fileAttach = fileAttachInput.val();
            var dropdown = row.find('select'); // Find the dropdown in the current row

            // Retrieve the selected option and its data-isRequired attribute
            var selectedOption = dropdown.find('option:selected');
            var isRequiredDoc = selectedOption.data('isrequi");
                WriteLiteral(@"red'); // Get the value of data-isRequired
            var selectedOptionCode = selectedOption.data('code'); // Get the value of data-isRequired
            var selectedOptionVal = selectedOption.val(); // Get the value of data-isRequired
            
            // Validation messages
            var errors = [];
            if (isRequiredDoc == true ) {
                if (!fileAttach || fileAttach.trim() === ""-1"") {
                    errors.push(""Hồ sơ này phải đính kèm file!"");
                }
                
            }
            if (!selectedOptionVal || selectedOptionVal.trim() === """") {
                errors.push(""Hồ sơ không được để trống!"");
            }
            if (!name || name.trim() === """") {
                errors.push(""Tên không được để trống!"");
            }

            // Display validation errors if any
            if (errors.length > 0) {
                toastr.error(errors.join(""<br>""), 'Lỗi', { positionClass: ""toast-top-center"" });
                r");
                WriteLiteral(@"eturn;
            }

            // Prepare the data for submission
            var dataPost = {
                Id: 0,
                ExpenseId: $(""#ExpenseId"").val(),
                ProfileId: selectedOptionVal,
                PaymentInfoCode: selectedOptionCode,
                PaymentInfoName: name.trim(),
                Notes: notes.val()?.trim(),
                FileAttach: fileAttachInput.val()?.trim()
            };

            // Log the data (optional for debugging)
            $.ajax({
                url: '/Category/CreateExpensePaymentInfo',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json',
                success: function (response) {
                    if (response.isSuccess) {
                        // Set inputs to readonly
                        nameInput.prop('readonly', true);
                        notes.prop('readonly', true);
                        fileInput.prop('disabled',");
                WriteLiteral(@" true);
                        dropdown.prop('disabled', true);
                        // Remove the onclick event from the save icon ValueReturn
                        row.find('span.fa-check').remove();
                        // Update the trash icon with the new ID
                        row.find('span.fa-trash').attr('onclick', `RemoveExpensePaymentProfile(${response.longValReturn})`);
                        toastr.success('Thông tin hồ sơ đã tạo thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                    } else {
                        toastr.error(response.errorMessage, 'Lỗi', { positionClass: ""toast-top-center"" });
                    }
                },
                error: function (xhr, status, error) {
                    // Xử lý khi có lỗi xảy ra trong quá trình gọi AJAX
                    alert('Có lỗi khi gửi yêu cầu!');
                }
            });
        }

        function handleCBPaymentProfile(event, randomId) {
            //");
                WriteLiteral(@" Get the selected option's text
            const selectElement = event.target;
            const selectedText = selectElement.options[selectElement.selectedIndex].text;

            // Set the text of the corresponding input field
            const inputElement = document.getElementById(`a_ten_hs_thanh_toan_${randomId}`);
            if (inputElement) {
                inputElement.value = selectedText;
            }
        }

        function showModalImport() {
            $(""#modal_import_expense"").modal(""show"");
        }

        //function dowloadTemplate() {
        //    $.ajax({
        //        url: '/Category/DowloadTemplateImportExpense', // URL of the controller action
        //        type: 'POST',
        //        success: function (data, textStatus, xhr) {
        //            // Check if the response contains a file (xhr.status == 200 means success)
        //            var disposition = xhr.getResponseHeader('Content-Disposition');
        //            var fileN");
                WriteLiteral(@"ame = ""TemplateImportExpense.xlsx"";
        //            var blob = data;

        //            // Create a link element and trigger the download
        //            var link = document.createElement('a');
        //            link.href = window.URL.createObjectURL(blob);
        //            link.download = fileName;
        //            link.click();
        //        },
        //        error: function (xhr, textStatus, errorThrown) {
        //            alert('Error exporting data: ' + errorThrown);
        //        },
        //        xhrFields: {
        //            responseType: 'blob'  // Important to handle binary file responses
        //        }
        //    });
        //}

        function readFileImport() {
            var formData = new FormData();
            var fileInput = document.getElementById('fileInput');
            var file = fileInput.files[0];
            if (file == undefined) {

                Swal.fire({
                    title: ""Vui lò");
                WriteLiteral(@"ng chọn file!"",
                    icon: ""error""
                });
                return;
            }
            formData.append('file', file);
            $.ajax({
                url: '/Category/ReadFileImportExpense',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    ShowWaiting();
                },
                complete: function () {
                    HideWaiting();
                },
                success: function (response) {
                    console.log(""response"", response)
                    dataSubmit = [];
                    dataResponeAjax = [];

                    if (response.status = ""Success"") {

                        toastr.success('Import mục chi thành công!', 'Thành công', { positionClass: ""toast-top-center"" });

                        //var data = response.data;
                        //var h");
                WriteLiteral(@"tmlAppend = '';
                        //for (var i = 0; i < data.length; i++) {
                        //    var code = generateCode(""MC"");
                        //    data[i].code = code;
                        //    htmlAppend += `<tr>`;
                        //    htmlAppend += `<td class=""col-checkbox"">
                        //                                             <input data-id='`+ data[i].code + `' type=""checkbox"" checked=""checked"" name=""checkRow"">
                        //                     </td>`;
                        //    htmlAppend += `<td>` + data[i].code + `</td>`;
                        //    htmlAppend += `<td>` + data[i].name + `</td>`;
                        //    htmlAppend += `<td>` + data[i].activeGroupName + `</td>`;
                        //    htmlAppend += `<td>` + data[i].notes + `</td>`;
                        //    htmlAppend += `</tr>`;
                        //    dataSubmit.push(data[i]);
                        //    dataResponeAjax.push");
                WriteLiteral(@"(data[i]);
                        //}
                        //$('#cntModalListExpense  #ListExpenseModal #lst-data-info').html(htmlAppend);
                        //showModal();
                    }
                   
                    $(""#modal_import_expense"").modal(""hide"");
                    SearchMucChi();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        title: jqXHR.responseText,
                        icon: ""error""
                    });
                }
            });
        }

        function showModal() {
            $('#cntModalListExpense #ListExpenseModal').modal().show();
            caclCheckTotal();
            $('#modal_import_expense').modal('hide');
            $('#cntModalListExpense #ListExpenseModal #lst-data-info').on('click', '[name=""checkRow""]', function () {
                var dataId = $(this).attr('data-id');
                if ($(this).is(':checked'))");
                WriteLiteral(@" {
                    var dtSubmit = dataResponeAjax.find(x => x.code == dataId);
                    if (dtSubmit) {
                        dataSubmit.push(dtSubmit);
                    }
                }
                else {
                    $('[name=""checkAllRow""]').prop('checked', false);
                    dataSubmit = dataSubmit.filter(x => x.code != dataId);
                }
                caclCheckTotal();
            });
            $('#cntModalListExpense #ListExpenseModal [name=""checkAllRow""]').on('click', function () {
                if ($(this).is(':checked')) {
                    $('#cntModalListActiveGroup #ListActiveGroupModal #lst-data-info [name=""checkRow""]').prop('checked', true);
                    dataSubmit = dataResponeAjax;
                }
                else {
                    $('#cntModalListActiveGroup #ListActiveGroupModal #lst-data-info [name=""checkRow""]').prop('checked', false);
                    dataSubmit = [];
                }
     ");
                WriteLiteral(@"           caclCheckTotal();
            })

        }

        function caclCheckTotal() {
            var total = 0;
            $('#cntModalListExpense #ListExpenseModal #lst-data-info [name=""checkRow""]').each(function () {
                if ($(this).is(':checked')) {
                    total++;
                }
            });
            $('#cntModalListExpense #ListExpenseModal #sumcheck').text(total);
        }
        function checkAllCheckbox() {
            var flag = true;
            $('#cntModalListExpense #ListExpenseModal #lst-data-info [name=""checkRow""]').each(function () {
                if (!$(this).is(':checked')) {
                    flag = false;
                    return false;
                }
            });
            return flag;
        }

    </script>
");
                EndContext();
            }
            );
            BeginContext(34346, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<DAL.Models.ComboBoxModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
