#pragma checksum "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\Project\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e9184dfd844c3cf960f6bd532db15285376667fa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Project_Index), @"mvc.1.0.view", @"/Views/Project/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Project/Index.cshtml", typeof(AspNetCore.Views_Project_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e9184dfd844c3cf960f6bd532db15285376667fa", @"/Views/Project/Index.cshtml")]
    public class Views_Project_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/TemplateImportProject.xlsx"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/template/MauNhap-KeHoach-PhanBo-NguonThu.xlsx"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatable/jquery.datatable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\Project\Index.cshtml"
  
    ViewData["Title"] = "Danh sách nguồn thu";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(104, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("styles", async() => {
                BeginContext(122, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(130, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e9184dfd844c3cf960f6bd532db15285376667fa6245", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(217, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(223, 98, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e9184dfd844c3cf960f6bd532db15285376667fa7577", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(321, 566, true);
                WriteLiteral(@"

    <style>
        .div-member {
            margin-left: 20px;
        }

            .div-member .nav .nav-link {
                margin: 4px 0 !important;
            }

        .card .nav.flex-column > li {
            border-bottom: 0px;
        }

        .span-team-name {
            font-weight: bold
        }

        .i-edit-saleteam {
            color: #555;
        }

        .i-delete-saleteam {
            color: #ff0000;
        }

        .typeahead {
            width: 100% !important;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(890, 157, true);
            WriteLiteral("<section class=\"content-header\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n                <h1>");
            EndContext();
            BeginContext(1049, 17, false);
#line 46 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\Project\Index.cshtml"
                Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(1067, 254, true);
            WriteLiteral("</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <ol class=\"breadcrumb float-sm-right\">\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Trang chủ</a></li>\r\n                    <li class=\"breadcrumb-item active\">");
            EndContext();
            BeginContext(1323, 17, false);
#line 51 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\Project\Index.cshtml"
                                                   Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(1341, 3313, true);
            WriteLiteral(@"</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class=""content"">

    <div class=""row"">

        <div class=""col-sm-12"">
            <div class=""card"">
                <div class=""card-header"">
                    <div class=""row"">
                        <div class=""col-sm-3"">
                            <label>Mã nguồn thu</label>
                            <input type=""text"" class=""form-control"" id=""txtMaDuAn"" />
                        </div>
                        <div class=""col-sm-3"">
                            <label>Tên nguồn thu</label>
                            <input type=""text"" class=""form-control"" id=""txtTenDuAn"" />
                        </div>
                        <div class=""col-sm-3"">
                            <button id=""btn-search"" onclick=""SearchProjectFinancialSummar()"" class=""btn btn-filter btn-sm btn-primary""><i class=""fa fa-search""></i>&nbsp;Tìm kiếm</button>
                     ");
            WriteLiteral(@"       <button id=""btn-createNV"" class=""btn btn-filter btn-sm btn-success"" onclick=""showModalCreateNV(0)""><i class=""fa fa-plus-circle""></i>&nbsp;Thêm mới</button>
                            <button id=""btn-createNV"" class=""btn btn-filter btn-sm btn btn-success"" onclick=""showModalImport()""><i class=""fas fa-file-import""></i>&nbsp;Import</button>
                            
                        </div>

                    </div>
                </div>

                <div class=""card-body "">
                    <table class=""table table-bordered table-hover dataTable"" id=""table-project"" width=""100%"">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th width=""100px"">Mã nguồn thu </th>
                                <th width=""200px"">Tên nguồn thu</th>
                                <th width=""200px"">Căn cứ pháp lý</th>
                                <th width=""140px"">Thời gian thực hiện</th>
    ");
            WriteLiteral(@"                            <th width=""120px"">Tổng hạn mức</th>
                                <th width=""120px"">Đã sử dụng</th>
                                <th width=""100px"">Ghi chú</th>
                                <th width=""100px""></th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>

    </div>


</section>


<!--modal add-->
<div class=""modal modal-blur fade"" id=""modal_add_project"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog modal-xl"" id=""form_add_project"">

    </div>
</div>

<!--modal import-->
<div class=""modal modal-blur fade"" id=""modal_import_project"" data-bs-backdrop=""static"" data-bs-focus=""false"" data-bs-keyboard=""false"" tabindex=""-1"" aria-hidden=""true"">
    <div class=""modal-dialog "" id=""form_import_project"">
        <div class=""modal-content"">
            <div cla");
            WriteLiteral("ss=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"uploadModalLabel\">Tải lên dữ liệu nguồn thu</h5>\r\n\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p><strong>Bước 1:</strong> Tải file mẫu tại đây - ");
            EndContext();
            BeginContext(4654, 81, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9184dfd844c3cf960f6bd532db15285376667fa14283", async() => {
                BeginContext(4723, 8, true);
                WriteLiteral("File mẫu");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4735, 2651, true);
            WriteLiteral(@"</p>
                <p><strong>Bước 2:</strong> Tải lên file dữ liệu mẫu phía trên</p>
                <p class=""text-danger""><strong>Lưu ý:</strong> Không thay đổi header của file mẫu</p>
                <form>
                    <div class=""mb-3"">
                        <label for=""fileInput"" class=""form-label"">Chọn file</label>
                        <input class=""form-control"" type=""file"" id=""fileInput"" accept="".xls, .xlsx"" onchange=""readFileImport()"">
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<!--modal read import-->


<div id=""cntModalListProject"">
    <div class=""modal fade"" id=""ListProjectModal"" tabindex=""-1"" aria-labelledby=""ListProjectModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
        <div class=""modal-dialog modal-xl"">
            <div class=""modal-content"">
                <div class=""modal-header pt-2 pb-2"">
                    <h5 class=""modal-title"" id=""ListProjectModalLab");
            WriteLiteral(@"el"">Tải lên dữ liệu nguồn thu</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Đóng"">
                        <span aria-hidden=""true"">
                            <i class=""fa fa-times""></i>
                        </span>
                    </button>
                </div>
                <div class=""modal-body"" style=""height: calc(100vh - 200px);overflow:scroll"">
                    <div class=""row mb-2"">
                        <div class=""col-xl-12 col-lg-12 col-md-12 col-12"">
                            <table class=""table table-root"">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type=""checkbox"" name=""checkAllRow"" checked=""checked"">
                                        </th>
                                        <th scope=""col"">Mã nguồn thu</th>
                                        <th scope=""col"" class=");
            WriteLiteral(@""""">Tên nguồn thu</th>
                                        <th scope=""col"" class="""">Căn cứ pháp lý</th>
                                        <th scope=""col"" class="""">Thời gian bắt đầu</th>
                                        <th scope=""col"" class="""">Thời gian kết thúc</th>
                                        <th scope=""col"" class="""">Tổng tiền</th>
                                        <th scope=""col"" class="""">Ghi chú</th>

                                    </tr>
                                </thead>
                                <tbody id=""lst-data-info""></tbody>
");
            EndContext();
            BeginContext(7600, 3575, true);
            WriteLiteral(@"                            </table>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer-custom"">
                    <div class=""footer-left col-6"">
                        <label>Số lượng dòng đã chọn: </label>
                        <span id=""sumcheck""></span>
                    </div>

                    <div class=""footer-right col-6 pb-3"">
                        <button type=""button"" class=""btn btn-primary"" onclick=""ImportDuAn()"">Import Dự án</button>
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--modal result import-->
<div id=""cntModalResultImport"">
    <div class=""modal fade"" id=""ListProjectModalResultImport"" tabindex=""-1"" aria-labelledby=""ListProjectModalResultImportLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
   ");
            WriteLiteral(@"     <div class=""modal-dialog modal-xl"">
            <div class=""modal-content"">
                <div class=""modal-header pt-2 pb-2"">
                    <h5 class=""modal-title"" id=""ListNVModalResultImportLabel"">Kết Quả Import</h5>

                </div>
                <div class=""modal-body"" style=""height: calc(100vh - 200px);overflow:scroll"">
                    <div class=""row mb-2"">
                        <div class=""col-xl-12 col-lg-12 col-md-12 col-12"">
                            <table class=""table table-root"" id=""table-root-result-import"">
                                <thead>
                                    <tr>

                                        <th scope=""col"">Mã nguồn thu</th>
                                        <th scope=""col"" class="""">Tên nguồn thu</th>
                                        <th scope=""col"" class="""">Căn cứ pháp lý</th>
                                        <th scope=""col"" class="""">Thời gian bắt đầu</th>
                                    ");
            WriteLiteral(@"    <th scope=""col"" class="""">Thời gian kết thúc</th>
                                        <th scope=""col"" class="""">Tổng tiền</th>
                                        <th scope=""col"" class="""">Ghi chú</th>
                                        <th scope=""col"" class="""">Trạng thái</th>
                                    </tr>
                                </thead>
                                <tbody id=""lst-data-info""></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer-custom"">


                    <div class=""footer-right col-6 pb-3"">

                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" onclick=""closeModalResultImport()"">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade show"" id=""modal-import-planing-project"" aria-modal=""true"" rol");
            WriteLiteral(@"e=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Import kế hoạch phân bổ nguồn thu</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">×</span>
                </button>
            </div>
            <div class=""modal-body"">
                <p><strong>Bước 1:</strong> Tải file mẫu tại đây - ");
            EndContext();
            BeginContext(11175, 91, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9184dfd844c3cf960f6bd532db15285376667fa22382", async() => {
                BeginContext(11254, 8, true);
                WriteLiteral("File mẫu");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11266, 397, true);
            WriteLiteral(@"</p>
                <p><strong>Bước 2:</strong> Tải lên file dữ liệu mẫu phía trên</p>
                <p class=""text-danger""><strong>Lưu ý:</strong> Không thay đổi header của file mẫu</p>
                <br />
                <form id=""formimporplaningproject"" class=""form-horizontal"" action=""/Project/ImportPlaningProject"" method=""post"" enctype=""multipart/form-data"">
                    ");
            EndContext();
            BeginContext(11665, 23, false);
#line 259 "D:\Projects\OnGit\CreditRequestSystem\WebApp\Views\Project\Index.cshtml"
                Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(11689, 1248, true);
            WriteLiteral(@"
                    <input type=""file"" name=""postedFile"" id=""postedFile"" style=""width:80%;"" />
                    <input type=""button"" id=""btn-import-profile"" value=""Import"" class=""btn btn-sm btn-success"" />
                    <strong style=""display:none;"" id=""span-waiting"">Đang xử lý.....</strong>
                </form>
                <br />
                <table class=""table table-bordered"" id=""table-import-result"" style=""display:none;"">
                    <tr>
                        <th>Tổng nhập</th>
                        <th>Thành công</th>
                        <th>Thất bại</th>
                    </tr>
                    <tr>
                        <td><span id=""span_total_import"">0</span></td>
                        <td><span id=""span_total_success"">0</span></td>
                        <td><span id=""span_total_fail"">0</span></td>
                    </tr>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type");
            WriteLiteral("=\"button\" class=\"btn btn-default\" onclick=\"ClosePopupImport()\" data-dismiss=\"modal\">Đóng</button>\r\n            </div>\r\n        </div>\r\n        <!-- /.modal-content -->\r\n    </div>\r\n    <!-- /.modal-dialog -->\r\n</div>\r\n\r\n\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(12954, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(12960, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9184dfd844c3cf960f6bd532db15285376667fa26034", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13023, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(13029, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9184dfd844c3cf960f6bd532db15285376667fa27292", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13076, 23537, true);
                WriteLiteral(@"
    <!-- Thêm jQuery Validate -->
    <script src=""https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js""></script>
    <script>
        var tableId = ""#table-project"";
        var ajaxURL = ""/Project/SearchProjectFinancialSummar"";

        var columnData = [
            { ""data"": ""id"", visible: false },
            { ""data"": ""projectCode"" },
            { ""data"": ""projectName"" },
            { ""data"": ""legalBasis"" },
            {
                ""data"": ""timeStart"", ""render"": function (data, type, row, meta) {
                    if (data != null && row.timeEnd != null) {

                        return moment(data).format('DD/MM/YYYY') + '<br>' + moment(row.timeEnd).format('DD/MM/YYYY');;
                    }
                    else {
                        return """";
                    }
                }
            },
            {
                ""data"": ""totalAmount"", ""render"": function (data, type, row, meta) {
                    return Rende");
                WriteLiteral(@"rNumerFormat(data);
                }
            },
            {
                ""data"": ""id"", ""render"": function (data, type, row, meta) {
                    return ""0"";
                }
            },
            { ""data"": ""notes"" },

            {
                ""data"": ""id"", ""render"": function (data, type, row, meta) {
                    return RenderTableAction(data);
                }
            },


         


            ];

        var arrMembers = [];
        var listFileAttact = [];

        $(document).ready(function () {

            SearchProjectFinancialSummar();

            // Khi người dùng chọn file
            $('#fileInputProject').on('change', function () {
                const file = this.files[0]; // Lấy file được chọn
                if (file) {
                    // Upload file
                    const fileData = new FormData();
                    fileData.append('file', this.files[0]);

                    $.ajax({
                  ");
                WriteLiteral(@"      url: '/FileUpload/UploadFile', // Đường dẫn đến API xử lý file
                        type: 'POST',
                        data: fileData,
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            if (response.success == true && response.fileNameAttactId > 0) {
                                const html = `
                                                        <tr>
                                                            <td width=""40px"" style=""text-align:center;"">
                                                                <a  target=""_blank"">
                                                                    <span class=""fa fa-download""></span>
                                                                </a>
                                                            </td>
                                                            <td>
                       ");
                WriteLiteral(@"                                         <a href=""${response.filePath}"" target=""_blank"">${response.fileName}</a>
                                                            </td>
                                                             <td width=""40px"" style=""text-align:center;color:crimson;"">
                                                                <span class=""fa fa-trash delete-file""
                                                                      data-id=""${response.fileNameAttactId}""
                                                                      style=""cursor:pointer;""
                                                                      onclick=""RemoveFile(${response.fileNameAttactId})""></span>
                                                            </td>
                                                        </tr>
                                                    `;

                                $('#table_Attact_File').append(html)
                          ");
                WriteLiteral(@"  }
                            listFileAttact.push(response.fileNameAttactId)
                            toastr.success('Tải file thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                        },
                        error: function () {
                            toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: ""toast-top-center"" });
                        }
                    });
                }
            });




           


        });
        function RenderTableAction(id) {
            var html = `
                            <div class='div-table-action'>
                                <span class=""fa fa-eye"" onclick=""GotoProjectDetail(${id})""></span>&nbsp;
                                <i class='fa fa-edit' onclick='showModalCreateNV(${id})' title='sửa'></i>&nbsp;
                                <i class='fa fa-trash' onclick='DeleteProject(${id})' title='xóa'></i>&nbsp;
                            </div>`;
            r");
                WriteLiteral(@"eturn html;
        }
        function GotoProjectDetail(id) {
            location.href = ""/project/ProjectDetail/"" + id;
        }
        function SearchProjectFinancialSummar() {

            var dataSearch = {
                ProjectCode: $(""#txtMaDuAn"").val(),
                ProjectName: $(""#txtTenDuAn"").val()
            };
            GenrateDataTableSearch(tableId, ajaxURL, columnData, dataSearch);



        }

        function showModalCreateNV(id) {
            $.ajax({
                url: '/Project/FormCreateProject', // Đảm bảo đường dẫn này đúng với action của bạn
                type: 'GET',
                data: {
                    Id: id
                },
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id ""dailog_nv""
                    $('#form_add_project').html(response);

                    // Hiển thị modal
                    $(""#modal_add_project"").modal(""show"")
                },
              ");
                WriteLiteral(@"  error: function (xhr, status, error) {
                    console.error(""Có lỗi khi tải nội dung modal: "", error);
                    alert(""Lỗi tải modal, vui lòng thử lại sau."");
                }
            });
        }

        //---------------CREATE PROJECT------------------//

        function RemoveFile(fileId) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: ""Bạn sẽ không thể hoàn tác hành động này!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/FileUpload/DeleteFile',
                        type: 'GET',
                        data: {
                     ");
                WriteLiteral(@"       Id: fileId
                        },
                        success: function (response) {
                            if (response.success) {
                                $(`span[data-id=""${fileId}""]`).closest('tr').remove();
                                listFileAttact = listFileAttact.filter(x => x != fileId);
                                toastr.success('Xóa file thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                            }
                            else {
                                toastr.error('Có lỗi xảy ra khi xóa file !', 'Lỗi', { positionClass: ""toast-top-center"" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(""Có lỗi khi tải nội dung modal: "", error);
                            alert(""Lỗi tải modal, vui lòng thử lại sau."");
                        }
                    });

                }
            }");
                WriteLiteral(@");
        }

        function CreateProject() {

            var isValidate = validateData();

            if (isValidate == true) {
                if (listFileAttact == null || listFileAttact.length == 0) {
                    toastr.error(""Chưa đính kèm file căn cứ pháp lý"", 'Lỗi', { positionClass: ""toast-top-center"" });
                    return;
                }
                var dataPost = {
                    Id: $(""#ProjectFinancialSummarId"").val(),
                    ProjectCode: $(""#a_ma_du_an"").val(),
                    ProjectName: $(""#a_ten_du_an"").val(),
                    LegalBasis: $(""#a_can_cu_phap_ly"").val(),
                    TimeStart: $(""#a_thoi_gian_bat_dau"").val(),
                    TimeEnd: $(""#a_thoi_gian_ket_thuc"").val(),
                    TotalAmount: $(""#a_tong_han_muc_khong_format"").val(),
                    StatusText: """",
                    Notes: $(""#a_ghi_chu"").val(),
                    FileAttach: listFileAttact
                };
  ");
                WriteLiteral(@"              // Gửi yêu cầu AJAX
                $.ajax({
                    url: '/Project/CreateProjectFinancialSummar',
                    type: 'POST',
                    data: JSON.stringify(dataPost),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            toastr.success('Dự án đã được tạo thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                            //$(""#projectId"").val(response.projectId);
                            //document.getElementById(""regon_hang_muc_phan_bo"").style.display = ""block"";
                            // Hiển thị modal
                            $(""#modal_add_project"").modal(""hide"")
                            SearchProjectFinancialSummar()

                        } else {
                            toastr.error(response.message, 'Lỗi', { positionClass: ""toast-top-center"" });
                        }
");
                WriteLiteral(@"                    },
                    error: function (xhr, status, error) {
                        // Xử lý khi có lỗi xảy ra trong quá trình gọi AJAX
                        alert('Có lỗi khi gửi yêu cầu!');
                    }
                });
            }
        }

        function UploadFileProject() {
            $('#fileInputProject').click();
        }

        function validateData() {
            var resultValid = $(""#frmCreateProject"").validate({
                rules: {
                    ""ten_du_an"": {
                        required: true,
                    },
                    ""ma_du_an"": {
                        required: true,
                    },
                    ""can_cu_phap_ly"": {
                        required: true,
                    },
                    ""thoi_gian_bat_dau"": {
                        required: true,
                    },
                    ""thoi_gian_ket_thuc"": {
                        required: true,
      ");
                WriteLiteral(@"              },
                    ""tong_han_muc"": {
                        required: true
                    },

                },
                messages: {
                    ""ten_du_an"": ""Tên nguồn thu không được để trống!"",
                    ""ma_du_an"": ""Mã nguồn thu không được để trống!"",
                    ""can_cu_phap_ly"": ""Căn cứ pháp lý không được để trống!"",
                    ""thoi_gian_bat_dau"": ""Thời gian thực hiện không được để trống!"",
                    ""thoi_gian_ket_thuc"": ""Thời gian thực hiện không được để trống!"",
                    ""tong_han_muc"": {
                        required: ""Tổng tiền không được để trống!""
                    }
                },

            }).form();

            return resultValid;
        }

        function showhideSoTienDaSuDung() {
            var ishow = document.getElementById(""a_luy_ke"").getAttribute(""data-value"");
            var iconElement = document.getElementById(""icon_show_hide"");
            if (ishow == ""s");
                WriteLiteral(@"how"") {
                document.getElementById('a_luy_ke').type = 'password';
                document.getElementById(""a_luy_ke"").setAttribute('data-value', 'hide');
                iconElement.classList.remove('fa-eye');
                iconElement.classList.add('fa-eye-slash');
            } else {
                document.getElementById('a_luy_ke').type = 'text';
                document.getElementById(""a_luy_ke"").setAttribute('data-value', 'show');
                iconElement.classList.remove('fa-eye-slash');
                iconElement.classList.add('fa-eye');
            }
        }

        function DeleteProject(id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: ""Bạn sẽ không thể hoàn tác hành động này!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButton");
                WriteLiteral(@"Text: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/project/DeleteProject',
                        type: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Dự án đã được xóa thành công!', 'Thành công', { positionClass: ""toast-top-center"" });
                                SearchProjectFinancialSummar();
                            }
                            else {
                                console.error(response);
                                toastr.error('Xóa thất bại.Đã phát sinh hồ sơ thanh toán!', 'Lỗi', { positionClass: ""toast-top-center"" });
                            }
                        },
                        error: funct");
                WriteLiteral(@"ion (xhr, status, error) {
                            console.error(""Có lỗi khi tải nội dung modal: "", error);
                            alert(""Lỗi tải modal, vui lòng thử lại sau."");
                        }
                    });

                }
            });

        }

        function formatTotalAmount() {
            var inputElement = document.getElementById('a_tong_han_muc');
            var value = inputElement.value.trim();
            if (value && !isNaN(value) || value == ""0"") {
                var rawValue = parseFloat(value);
                document.getElementById('a_tong_han_muc_khong_format').value = rawValue;

                var formattedValue = rawValue.toLocaleString('de-DE');
                inputElement.value = formattedValue;
            } else {
                // If invalid, clear both fields
                inputElement.value = '';
                document.getElementById('a_tong_han_muc_khong_format').value = '';
            }
        }

        ");
                WriteLiteral(@"function showModalImport() {
            $(""#modal_import_project"").modal(""show"")
        }

        function readFileImport() {
            var formData = new FormData();
            var fileInput = document.getElementById('fileInput');
            var file = fileInput.files[0];
            if (file == undefined) {

                Swal.fire({
                    title: ""Vui lòng chọn file!"",
                    icon: ""error""
                });
                return;
            }
            formData.append('file', file);
            $.ajax({
                url: '/project/ReadFileImport',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    ShowWaiting();
                },
                complete: function () {
                    HideWaiting();
                },
                success: function (response) {
                    co");
                WriteLiteral(@"nsole.log(""response"", response)
                    dataSubmit = [];
                    dataResponeAjax = [];

                    if (response.status = ""Success"") {
                        var data = response.data;
                        var htmlAppend = '';
                        for (var i = 0; i < data.length; i++) {
                            var projectCode = generateCode(""DA"");
                            data[i].projectCode = projectCode;
                            htmlAppend += `<tr>`;
                            htmlAppend += `<td class=""col-checkbox"">
                                                 <input data-id='`+ data[i].projectCode + `' type=""checkbox"" checked=""checked"" name=""checkRow"">
                                 </td>`;
                            htmlAppend += `<td>` + data[i].projectCode + `</td>`;
                            htmlAppend += `<td>` + data[i].projectName + `</td>`;
                            htmlAppend += `<td>` + data[i].legalBasis + `</td>`;
   ");
                WriteLiteral(@"                         htmlAppend += `<td>` + (data[i].timeStart == null ? """" : moment(data[i].timeStart).format('DD/MM/YYYY')) + `</td>`;
                            htmlAppend += `<td>` + (data[i].timeEnd == null ? """" : moment(data[i].timeEnd).format('DD/MM/YYYY')) + `</td>`;
                            htmlAppend += `<td>` + data[i].totalAmount + `</td>`;
                            htmlAppend += `<td>` + data[i].notes + `</td>`;
                            htmlAppend += `</tr>`;
                            dataSubmit.push(data[i]);
                            dataResponeAjax.push(data[i]);
                        }
                        $('#cntModalListProject #ListProjectModal #lst-data-info').html(htmlAppend);
                        showModal();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        title: jqXHR.responseText,
                        icon: ""error""
            ");
                WriteLiteral(@"        });
                }
            });
        }
        function showModal() {
            $('#cntModalListProject #ListProjectModal').modal().show();
            caclCheckTotal();
            $('#modal_import_project').modal('hide');
            $('#cntModalListProject #ListProjectModal #lst-data-info').on('click', '[name=""checkRow""]', function () {
                var dataId = $(this).attr('data-id');
                if ($(this).is(':checked')) {
                    var dtSubmit = dataResponeAjax.find(x => x.projectCode == dataId);
                    if (dtSubmit) {
                        dataSubmit.push(dtSubmit);
                    }
                }
                else {
                    $('[name=""checkAllRow""]').prop('checked', false);
                    dataSubmit = dataSubmit.filter(x => x.projectCode != dataId);
                }
                caclCheckTotal();
            });
            $('#cntModalListProject #ListProjectModal [name=""checkAllRow""]').on('cli");
                WriteLiteral(@"ck', function () {
                if ($(this).is(':checked')) {
                    $('#cntModalListProject #ListProjectModal #lst-data-info [name=""checkRow""]').prop('checked', true);
                    dataSubmit = dataResponeAjax;
                }
                else {
                    $('#cntModalListProject #ListProjectModal #lst-data-info [name=""checkRow""]').prop('checked', false);
                    dataSubmit = [];
                }
                caclCheckTotal();
            })

        }


        function caclCheckTotal() {
            var total = 0;
            $('#cntModalListProject #ListProjectModal #lst-data-info [name=""checkRow""]').each(function () {
                if ($(this).is(':checked')) {
                    total++;
                }
            });
            $('#cntModalListProject #ListProjectModal #sumcheck').text(total);
        }
        function checkAllCheckbox() {
            var flag = true;
            $('#cntModalListProject #ListProject");
                WriteLiteral(@"Modal #lst-data-info [name=""checkRow""]').each(function () {
                if (!$(this).is(':checked')) {
                    flag = false;
                    return false;
                }
            });
            return flag;
        }

        function ImportDuAn() {
            if (dataSubmit.length < 1) {
                Swal.fire({
                    title: ""Vui lòng chọn ít nhất 1 dòng"",
                    icon: ""error""
                });
                return;
            }
            console.log(""dataSubmit"", dataSubmit)
            var jsonStr = JSON.stringify(dataSubmit);
            $.ajax({
                url: '/project/ImportProjectFinancialSummar',
                type: 'POST',
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                data: jsonStr,
                processData: false,
                beforeSend: function () {
                    $('#cntModalListProject #ListProjectModal').modal('hide'");
                WriteLiteral(@");

                },
                complete: function () {

                },
                success: function (response) {
                    console.log(""response"", response)
                    Swal.fire({
                        title: ""Thao tác đã thực hiện"",
                        text: dataSubmit.length + "" dòng dữ liệu"",
                        icon: response.status == ""Thành công"" ? ""success"" : ""error""
                    });

                    var htmlAppend = '';
                    for (var i = 0; i < response.data.length; i++) {
                        htmlAppend += `<tr>`;
                        htmlAppend += `<td>` + response.data[i].item.projectCode + `</td>`;
                        htmlAppend += `<td>` + response.data[i].item.projectName + `</td>`;
                        htmlAppend += `<td>` + response.data[i].item.legalBasis + `</td>`;
                        htmlAppend += `<td>` + response.data[i].item.timeStart + `</td>`;
                        htmlAppend");
                WriteLiteral(@" += `<td>` + response.data[i].item.timeEnd + `</td>`;
                        htmlAppend += `<td>` + response.data[i].item.notes + `</td>`;
                        htmlAppend += `<td>` + response.data[i].item.totalAmount + `</td>`;
                        var messageColor = response.data[i].message == ""Thành công"" ? ""green"" : ""red"";
                        htmlAppend += `<td style='color:${messageColor};'>` + (response.data[i].message) + `</td>`;
                        htmlAppend += `</tr>`;


                    }
                    $('#ListProjectModalResultImport #table-root-result-import #lst-data-info').html(htmlAppend);

                    $('#ListProjectModalResultImport').modal().show();
                    SearchProjectFinancialSummar();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#result').html('Error: ' + textStatus + ' - ' + errorThrown);
                }
            });
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(36616, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
