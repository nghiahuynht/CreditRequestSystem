{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t\tconst patternSet = this.get(\"patterns\")!;\n\t\tif (patternSet) {\n\t\t\tif (series.get(\"fillPattern\") == null) {\n\t\t\t\tconst pattern = patternSet.next();\n\n\t\t\t\tseries._setSoft(\"fillPattern\", pattern);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\t// Explicitly disposing cursor to avoid memory leak of cursor adding\n\t\t// keyboard events after parent chart has been disposed\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.dispose();\n\t\t}\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n\n\t/**\n\t * Sensitivity of panning. The higher the number, the more sensitive it is.\n\t *\n\t * @default 1\n\t */\n\tpanSensitivity?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\t/**\n\t * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\n\t */\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\") {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\t\t\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\t\t\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\t\n\n\tprotected _nextTime(time:number, count:number, baseInterval:ITimeInterval){\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\t\t\tconst nextDate = dates[index + 1];\r\n\t\t\tif(nextDate){\r\n\t\t\t\tlet nextItemValue = nextDate;\r\n\t\t\t\t// use next item value if it's closer\r\n\t\t\t\tif (Math.abs(nextItemValue - value) < Math.abs(itemValue - value)) {\r\n\t\t\t\t\titemValue = nextItemValue;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tlet d = value - itemValue;\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif (result.index >= len) {\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time: number, count: number, _baseInterval: ITimeInterval) {\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _dseHandled = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\t\t\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty && !this._dseHandled) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\tthis._dseHandled = true;\n\t\t}\n\t}\n\n\tpublic _clearDirty(): void {\n\t\tsuper._clearDirty();\n\t\tthis._dseHandled = false;\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\t\t\t\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\t\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\t\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\t\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\t\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\t\t\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\t\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tif (columnsTemplate.get(\"fillPattern\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fillPattern\", this.get(\"fillPattern\"));\n\t\t\t}\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tthis.fills.template.set(\"fillPattern\", fillPattern);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fillPattern\", fillPattern);\n\t\t\t}\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\taxisRange.fills!.clear();\n\t\t\taxisRange.strokes!.clear();\t\t\t\n\t\t})\t\t\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\t\t\t\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\t\t\t\t\t\t\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","maxDeviation","newStart","Math","min","max","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","patternSet","pattern","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","_fy","reverse","prevBottom","bounds","_dispose","classNames","concat","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","fill","fromHex","fillOpacity","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","key","dir","focused","m","nextPosition","_alwaysShow","alwaysShow","isFocus","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","remove","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisBullet","uid","AxisLabel","AxisLabelRadial","AxisRenderer","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","once","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_handleRangeChange","_dataGrouped","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstTime","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","current","modifiedDifference","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","firstDate","outOfSelection","_adjustStartIndex","_markDirtyPrivateKey","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_getMinorInterval","minorGridInterval","_prepareAxisItems","nextGridUnit","format","previousValue","formats","minorLabelsEnabled","minorGridEnabled","minorDuration","_dataItems","processDataItem","date","dateFormatter","labelEndValue","minorTimeUnit","minorCount","mmm","previousMinorValue","minorValue","minorFormats","minorDataItem","minorDataItems","minorEndValue","minorLabel","j","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","_handleSizeDirty","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","firstDay","NaN","adjustPosition","snap","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","positionToDate","dateToPosition","dtime","tooltipValue","_nextTime","GaplessDateAxis","valueFields","_getDates","_customDates","_dates","dates","found","_updateAllDates","extraMax","extraMin","len","baseCount","unshift","itemValue","nextDate","nextItemValue","valueToIndex","findex","floor","startValue","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","_frequency","realDuration","now","previousDataItem","selectedItems","_getIndexes","_m","_addMinorGrid","timeUnit2","previousLabel","worse","_pickWorse","dataItemA","dataItemB","valueA","valueB","getDate","mTimeUnit","maxValue","minorSelectedItems","firstValue","items","c","fullDuration","originalValue","realValue","_hasDate","_baseInterval","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_valuesDirty","_getMinMax","getMM","letter","_getSelectionMinMax","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","decCount","fillEndPosition","labelEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","selectionStrictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","ds","setting","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","stroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","fillPattern","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","dataSet","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","markDirtyText","hideTooltip","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","minSelection","dl","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}