#pragma checksum "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a39cccadb3b1a00dd82aeca7c208134ff7b17cb2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Invoice_InvoiceDetail), @"mvc.1.0.view", @"/Views/Invoice/InvoiceDetail.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Invoice/InvoiceDetail.cshtml", typeof(AspNetCore.Views_Invoice_InvoiceDetail))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 7 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
using DAL;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a39cccadb3b1a00dd82aeca7c208134ff7b17cb2", @"/Views/Invoice/InvoiceDetail.cshtml")]
    public class Views_Invoice_InvoiceDetail : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DAL.Models.Invoice.InvoiceDetailViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datepicker/datepicker3.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datepicker/bootstrap-datepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatable/jquery.datatable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/custom-thousands-separator/dist/number-divider.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
  
    ViewData["Title"] = Model.Invoice.Id != 0 ? "Hợp đồng: " + Model.Invoice.Code : "Thông tin hợp đồng";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            DefineSection("styles", async() => {
                BeginContext(241, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(249, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb26423", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(318, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(324, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb27755", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(411, 448, true);
                WriteLiteral(@"

    <style>
        #btn-add-todetail {
            font-size: 9pt !important;
        }
        .text-display-money {
            position:relative;
            top:4px;
            font-size:14pt;
        }
        .typeahead {
            width: 100% !important;
        }
        .badge-status{
            font-weight:bold;
        }
        .form-group{
            margin-bottom:0px !important;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(862, 157, true);
            WriteLiteral("<section class=\"content-header\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n                <h1>");
            EndContext();
            BeginContext(1021, 17, false);
#line 37 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(1039, 171, true);
            WriteLiteral("</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <ol class=\"breadcrumb float-sm-right\">\r\n                    <li class=\"breadcrumb-item\">\r\n\r\n");
            EndContext();
#line 43 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                          
                            if (Model.Invoice.InvoiceStatus == Contanst.InvoiceStatus_ChoDuyet)
                            {

#line default
#line hidden
            BeginContext(1366, 107, true);
            WriteLiteral("                                <input type=\"button\" value=\"Lưu\" class=\"btn btn-warning\" id=\"btn-save\" />\r\n");
            EndContext();
#line 47 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"

                                if (ViewBag.Role == "QuanLy" && Model.Invoice.Id > 0)
                                {

#line default
#line hidden
            BeginContext(1597, 141, true);
            WriteLiteral("                                    <input type=\"button\" value=\"Duyệt\" class=\"btn btn-warning\" id=\"btn-approve\" style=\"margin-left:5px;\" />\r\n");
            EndContext();
#line 51 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                }
                                if (Model.Invoice.Id > 0)
                                {

#line default
#line hidden
            BeginContext(1867, 139, true);
            WriteLiteral("                                    <input type=\"button\" value=\"Hủy\" class=\"btn btn-warning\" id=\"btn-cancel\" style=\"margin-right:5px;\" />\r\n");
            EndContext();
#line 55 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                }

                            }
                        

#line default
#line hidden
            BeginContext(2101, 2078, true);
            WriteLiteral(@"


                    </li>

                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class=""content"">
    <div class=""col-sm-12"">
        <div class=""card card-primary card-outline card-tabs"">
            <div class=""card-header p-0 pt-1 border-bottom-0"">
                <ul class=""nav nav-tabs"" id=""custom-tabs-three-tab"" role=""tablist"">
                    <li class=""nav-item"">
                        <a class=""nav-link active"" id=""invoice-info-tab"" data-toggle=""pill"" href=""#invoice-info-tab-content"" role=""tab"" aria-controls=""custom-tabs-three-home"" aria-selected=""true"">THÔNG TIN HỢP ĐỒNG</a>
                    </li>
                    <li class=""nav-item"" style=""display:none;"">
                        <a class=""nav-link"" id=""invoice-detail-tab"" data-toggle=""pill"" href=""#invoice-detail-tab-content"" role=""tab"" aria-controls=""custom-tabs-three-home"" aria-selected=""true"">CHI TIẾT ĐƠN HÀNG</a>
                    </li>
             ");
            WriteLiteral(@"       <li class=""nav-item"" style=""display:none;"">
                        <a class=""nav-link"" id=""invoice-history-payment-tab"" data-toggle=""pill"" href=""#invoice-history-payment-tab-content"" role=""tab"" aria-controls=""custom-tabs-three-messages"" aria-selected=""false"">LỊCH SỬ THANH TOÁN</a>
                    </li>
                    <li class=""nav-item"" style=""display:none;"">
                        <a class=""nav-link "" id=""invoice-output-tab"" data-toggle=""pill"" href=""#invoice-output-tab-content"" role=""tab"" aria-controls=""custom-tabs-three-profile"" aria-selected=""false"">PHIẾU XUẤT KHO LIÊN QUAN</a>
                    </li>


                </ul>
            </div>
            <div class=""card-body"">
                <div class=""tab-content"" id=""custom-tabs-three-tabContent"">
                    <div class=""tab-pane fade active show"" id=""invoice-info-tab-content"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-home-tab"">
                        <form class=""form-horizontal"" id=""form-invoice"">");
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(4180, 33, false);
#line 94 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                       Write(Html.HiddenFor(x => x.Invoice.Id));

#line default
#line hidden
            EndContext();
            BeginContext(4213, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(4244, 44, false);
#line 95 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                       Write(Html.HiddenFor(x => x.Invoice.InvoiceStatus));

#line default
#line hidden
            EndContext();
            BeginContext(4288, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(4319, 42, false);
#line 96 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                       Write(Html.HiddenFor(x => x.Invoice.InvoiceType));

#line default
#line hidden
            EndContext();
            BeginContext(4361, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(4392, 40, false);
#line 97 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                       Write(Html.HiddenFor(x => x.Invoice.StaffCode));

#line default
#line hidden
            EndContext();
            BeginContext(4432, 332, true);
            WriteLiteral(@"
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Tên KH *</label>
                                        <div class=""col-sm-9"">
");
            EndContext();
#line 103 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                              
                                                string displayObj = string.Empty;
                                                string phoneObj = string.Empty;
                                                string addressObj = string.Empty;
                                                string objCode = string.Empty;
                                                if (!string.IsNullOrEmpty(Model.Invoice.ObjCode))
                                                {
                                                    displayObj = string.Format("{0}", Model.ObjSelected.Name);
                                                    phoneObj = Model.ObjSelected.Phone;
                                                    addressObj = Model.ObjSelected.Address;
                                                    objCode = Model.ObjSelected.Code;

                                                }
                                            

#line default
#line hidden
            BeginContext(5770, 88, true);
            WriteLiteral("                                            <input type=\"text\" id=\"txt-autocomplete-obj\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 5858, "\"", 5879, 1);
#line 117 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 5866, displayObj, 5866, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5880, 556, true);
            WriteLiteral(@" class=""form-control"" name=""txt-autocomplete-obj"" autocomplete=""off"" autofocus placeholder=""Tìm theo mã hoặc tên"">
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Mã KH</label>
                                        <div class=""col-sm-9"">
                                            <input type=""text"" class=""form-control"" readonly=""readonly"" id=""Invoice_ObjCode""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 6436, "\"", 6454, 1);
#line 123 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 6444, objCode, 6444, 10, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6455, 470, true);
            WriteLiteral(@" name=""Invoice.ObjCode"" />
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Điện thoại</label>
                                        <div class=""col-sm-9"">
                                            <input type=""text"" class=""form-control"" readonly=""readonly"" id=""txt-objphone""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 6925, "\"", 6944, 1);
#line 129 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 6933, phoneObj, 6933, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6945, 448, true);
            WriteLiteral(@" />
                                        </div>
                                    </div>

                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Địa chỉ</label>
                                        <div class=""col-sm-9"">
                                            <input type=""text"" class=""form-control"" readonly=""readonly"" id=""txt-objaddress""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 7393, "\"", 7414, 1);
#line 136 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 7401, addressObj, 7401, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7415, 3783, true);
            WriteLiteral(@" />
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Người đại diện</label>
                                        <div class=""col-sm-9"">
                                            <input type=""text"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">MST</label>
                                        <div class=""col-sm-9"">
                                            <input type=""text"" class=""form-control"" />
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <br />");
            WriteLiteral(@"<br />
                                        <table class=""table table-bordered"">
                                            <thead>
                                                <tr>
                                                    <th>File đính kèm</th>
                                                    <th>Ngày</th>
                                                    <th>User</th>
                                                    <th class=""text-center"">
                                                        <button title=""Đính kèm file"" class=""btn btn-sm btn-warning""><i class=""fa fa-file-upload""></i></button>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td><a href=""#"">HĐ-0234565(auto).pdf</a></td>
        ");
            WriteLiteral(@"                                            <td>19/03/2024</td>
                                                    <td>nvlong</td>
                                                    <td class=""text-center"">
                                                        <span><i class=""fa fa-trash""></i></span>&nbsp;
                                                        <span><i class=""fa fa-eye""></i></span>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><a href=""#"">File desc-promotion.xlsx</a></td>
                                                    <td>19/03/2024</td>
                                                    <td>nvlong</td>
                                                    <td class=""text-center"">
                                                        <span><i class=""fa fa-trash""></i></span>&nbsp;
                 ");
            WriteLiteral(@"                                       <span><i class=""fa fa-eye""></i></span>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>


                                <div class=""col-md-6"">
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Mã HĐ *</label>
                                        <div class=""col-sm-9"">
                                            ");
            EndContext();
            BeginContext(11199, 69, false);
#line 193 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                       Write(Html.TextBoxFor(x => x.Invoice.Code, new { @class = "form-control" }));

#line default
#line hidden
            EndContext();
            BeginContext(11268, 1334, true);
            WriteLiteral(@"
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Loại HĐ *</label>
                                        <div class=""col-sm-9"">
                                            <select class=""form-control"">
                                                <option value=""1"">STEM theo tiết</option>
                                                <option value=""2"">STEM theo tháng</option>
                                                <option value=""3"">KNS theo tiết</option>
                                                <option value=""4"">KNS theo tháng</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label cla");
            WriteLiteral(@"ss=""col-form-label col-sm-3"">Ngày tạo HĐ *</label>
                                        <div class=""col-sm-9"">
                                            <div class=""input-group date"">
                                                <input type=""text"" id=""Invoice_InvoiceDate"" name=""Invoice.InvoiceDate""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 12602, "\"", 12738, 1);
#line 211 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 12610, Model.Invoice.InvoiceDate.HasValue?Model.Invoice.InvoiceDate.Value.ToString("dd/MM/yyyy"):DateTime.Now.ToString("dd/MM/yyyy"), 12610, 128, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(12739, 1177, true);
            WriteLiteral(@" class=""form-control"">
                                                <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Người tạo *</label>
                                        <div class=""col-sm-9"">
                                            <input class=""form-control"" placeholder=""Mặc định lấy user đang login"" />
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Ngày hiệu lực *</label>
                                        <div class=""col-sm-9"">
                                         ");
            WriteLiteral("   <div class=\"input-group date\">\r\n                                                <input type=\"text\" id=\"Invoice_InvoiceDate\" name=\"Invoice.InvoiceDate\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 13916, "\"", 14052, 1);
#line 226 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 13924, Model.Invoice.InvoiceDate.HasValue?Model.Invoice.InvoiceDate.Value.ToString("dd/MM/yyyy"):DateTime.Now.ToString("dd/MM/yyyy"), 13924, 128, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(14053, 736, true);
            WriteLiteral(@" class=""form-control"">
                                                <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Ngày kết thúc *</label>
                                        <div class=""col-sm-9"">
                                            <div class=""input-group date"">
                                                <input type=""text"" id=""Invoice_InvoiceDate"" name=""Invoice.InvoiceDate""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 14789, "\"", 14925, 1);
#line 235 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 14797, Model.Invoice.InvoiceDate.HasValue?Model.Invoice.InvoiceDate.Value.ToString("dd/MM/yyyy"):DateTime.Now.ToString("dd/MM/yyyy"), 14797, 128, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(14926, 541, true);
            WriteLiteral(@" class=""form-control"">
                                                <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">NV phụ trách *</label>
                                        <div class=""col-sm-9"">
");
            EndContext();
#line 243 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                              
                                                string displayStaff = string.Empty;

                                                if (!string.IsNullOrEmpty(Model.Invoice.StaffCode))
                                                {
                                                    displayStaff = string.Format("{0}-{1}", Model.StaffSelected.UserName, Model.StaffSelected.FullName);


                                                }
                                            

#line default
#line hidden
            BeginContext(16010, 90, true);
            WriteLiteral("                                            <input type=\"text\" id=\"txt-autocomplete-staff\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 16100, "\"", 16123, 1);
#line 253 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
WriteAttributeValue("", 16108, displayStaff, 16108, 15, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(16124, 441, true);
            WriteLiteral(@" class=""form-control"" name=""txt-autocomplete-staff"" autocomplete=""off"" autofocus placeholder=""Tìm theo mã hoặc tên"">

                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Tình trạng</label>
                                        <div class=""col-sm-9"">
");
            EndContext();
#line 260 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                              
                                                if (Model.Invoice.InvoiceStatus == DAL.Contanst.InvoiceStatus_ChoDuyet)
                                                {

#line default
#line hidden
            BeginContext(16785, 117, true);
            WriteLiteral("                                                    <span class=\"badge badge-warning badge-status\">Chờ duyệt</span>\r\n");
            EndContext();
#line 264 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                                }
                                                else if (Model.Invoice.InvoiceStatus == DAL.Contanst.InvoiceStatus_DaDuyet)
                                                {

#line default
#line hidden
            BeginContext(17129, 116, true);
            WriteLiteral("                                                    <span class=\"badge badge-success badge-status\">Đã duyệt</span>\r\n");
            EndContext();
#line 268 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                                }
                                                else if (Model.Invoice.InvoiceStatus == DAL.Contanst.InvoiceStatus_Huy)
                                                {

#line default
#line hidden
            BeginContext(17468, 110, true);
            WriteLiteral("                                                    <span class=\"badge badge-danger badge-status\">Hủy</span>\r\n");
            EndContext();
#line 272 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                                                }
                                            

#line default
#line hidden
            BeginContext(17676, 17876, true);
            WriteLiteral(@"                                        </div>
                                    </div>

                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Định hướng</label>
                                        <div class=""col-sm-9"">
                                            <input type=""radio"" value=""Yes"" checked=""checked"" /> &nbsp; Đã định hướng &nbsp;&nbsp;&nbsp;
                                            <input type=""radio"" value=""No"" /> &nbsp; Chưa định hướng
                                        </div>
                                    </div>
                                    <div class=""form-group row"">
                                        <label class=""col-form-label col-sm-3"">Nguồn giáo viên</label>
                                        <div class=""col-sm-9"">
                                            <select class=""form-control"">
                                                <option valu");
            WriteLiteral(@"e=""ichi"">ICHI</option>
                                                <option value=""nhatruong"">NhaTruong</option>
                                            </select>

                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                           

                        </form>




                    </div>
                    <div class=""tab-pane fade "" id=""invoice-detail-tab-content"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-profile-tab"">
                        <table id=""table-invoice-detail"" class=""table table-bordered"" width=""100%"">
                            <thead>
                                <tr>

                                    <td colspan=""5"">
                                        <div class=""row"">
                                            <div class=""col-sm-4""><strong>Nhập từ khoá tìm sản phẩm cần bán</s");
            WriteLiteral(@"trong></div>
                                            <div class=""col-sm-8"">
                                                <div class=""input-group mb-3"">
                                                    <input type=""text"" class=""form-control"" placeholder=""Mã sản phẩm hoặc tên sản phẩm"" id=""txt-product-autocomplete"" name=""txt-product-autocomplete"" autocomplete=""off"" autofocus>
                                                    <div class=""input-group-append"">
                                                        <button class=""btn btn-sm btn-primary"" type=""button""><i class=""fa fa-plus-circle""></i></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </td>
                                    <td colspan=""2"">
                                       ");
            WriteLiteral(@" <div class=""text-right"">
                                            <button class=""btn btn-sm btn-success"" id=""btn-export""><i class=""fa fa-download""></i>&nbsp;Export excel</button>
                                            <button class=""btn btn-sm btn-success"" id=""btn-import""><i class=""fa fa-upload""></i>&nbsp;Import excel</button>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <th width=""100px"">Mã hàng</th>
                                    <th width=""200px"">Tên mặt hàng </th>
                                    <th>Đơn vị</th>
                                    <th width=""150px"">SL</th>
                                    <th width=""150px"">Giá</th>
                                    <th width=""150px"">Thành tiền</th>
                                    <th width=""50px""></th>
                                </tr>
                       ");
            WriteLiteral(@"     </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class=""tab-pane fade "" id=""invoice-history-payment-tab-content"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-profile-tab"">
                        <div class=""input-group mb-3"">
                            <input type=""text"" class=""form-control rounded-0"">
                            <span class=""input-group-append"">
                                <button type=""button"" class=""btn btn-info btn-flat"">Go!</button>
                            </span>
                        </div>
                        Mauris tincidunt mi at erat gravida, eget tristique urna bibendum. Mauris pharetra purus ut ligula tempor, et vulputate metus facilisis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Maecenas sollicitudin, nisi a luctus interdum, nisl ligula placerat mi, qui");
            WriteLiteral(@"s posuere purus ligula eu lectus. Donec nunc tellus, elementum sit amet ultricies at, posuere nec nunc. Nunc euismod pellentesque diam.
                    </div>
                    <div class=""tab-pane fade"" id=""invoice-output-tab-content"" role=""tabpanel"" aria-labelledby=""custom-tabs-three-messages-tab"">
                        Morbi turpis dolor, vulputate vitae felis non, tincidunt congue mauris. Phasellus volutpat augue id mi placerat mollis. Vivamus faucibus eu massa eget condimentum. Fusce nec hendrerit sem, ac tristique nulla. Integer vestibulum orci odio. Cras nec augue ipsum. Suspendisse ut velit condimentum, mattis urna a, malesuada nunc. Curabitur eleifend facilisis velit finibus tristique. Nam vulputate, eros non luctus efficitur, ipsum odio volutpat massa, sit amet sollicitudin est libero sed ipsum. Nulla lacinia, ex vitae gravida fermentum, lectus ipsum gravida arcu, id fermentum metus arcu vel metus. Curabitur eget sem eu risus tincidunt eleifend ac ornare magna.
                    </div>");
            WriteLiteral(@"

                </div>
            </div>
        </div>

        <div class=""card card-primary card-outline"">
            <div class=""card-header""><strong>Chương trình/chính sách/ghi chú</strong></div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <span>Chương trình</span>
                    </div>
                    <div class=""col-sm-3"">
                        <span>Chính sách</span>
                    </div>
                    <div class=""col-sm-3"">
                        <span>ghi chú</span>
                    </div>
                    <div class=""col-sm-3"">

                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <textarea class=""form-control"" rows=""5""></textarea>
                    </div>
                    <div class=""col-sm-3"">
                        <textarea class=""form-contr");
            WriteLiteral(@"ol"" rows=""5""></textarea>
                    </div>
                    <div class=""col-sm-3"">
                        <textarea class=""form-control"" rows=""5""></textarea>
                    </div>
                    <div class=""col-sm-3"">
                        <div class=""form-group row"">
                            <label class=""col-form-label col-sm-8"">Sỉ số lớp</label>
                            <div class=""col-sm-4"">
                                <input type=""number"" class=""form-control"" />
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <label class=""col-form-label col-sm-8"">Sỉ số học sinh</label>
                            <div class=""col-sm-4"">
                                <input type=""number"" class=""form-control"" />
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <label class=""");
            WriteLiteral(@"col-form-label col-sm-8"">Số tháng/tiết thực dạy</label>
                            <div class=""col-sm-4"">
                                <input type=""number"" class=""form-control"" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class=""card card-primary card-outline"">
            <div class=""card-header"">
                <div class=""row"">
                    <div class=""col-sm-10""><strong>Nội dung triển khai</strong></div>
                    <div class=""col-sm-2"">
                        <div class=""text-right"">
                            <button class=""btn btn-sm btn-warning""><i class=""fa fa-plus""></i>&nbsp;Thêm tiết học vào HĐ</button>
                        </div>
                    </div>
                </div>
                
            </div>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-sm-3""><l");
            WriteLiteral(@"abel>Chương trình học</label></div>
                    <div class=""col-sm-3""><label>Số tiết/tháng</label></div>
                    <div class=""col-sm-3""><label>Học phí/tiết/học sinh</label></div>
                    <div class=""col-sm-3""><label>Phí triển khai/tiết/học sinh</label></div>

                </div>
                <div class=""row"">
                    <div class=""col-sm-3"">
                        <input type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-3"">
                        <input type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-3"">
                        <input type=""text"" class=""form-control"" />
                    </div>
                    <div class=""col-sm-3"">
                        <input type=""text"" class=""form-control"" />
                    </div>


                </div>
                <br />
                <hr />
                <div class=""row"">");
            WriteLiteral(@"
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">08/2024</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">09/2024</h3>
                                <div class=""card-tools pull-right"">
         ");
            WriteLiteral(@"                           <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">10/2024</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
            ");
            WriteLiteral(@"                </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">11/2024</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">12/2024</h");
            WriteLiteral(@"3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">01/2025</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                       ");
            WriteLiteral(@"     <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">02/2025</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-heade");
            WriteLiteral(@"r with-border"">
                                <h3 class=""card-title"">03/2025</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                                </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-2"">
                        <div class=""card card-info"">
                            <div class=""card-header with-border"">
                                <h3 class=""card-title"">03/2025</h3>
                                <div class=""card-tools pull-right"">
                                    <button type=""button"" class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                 ");
            WriteLiteral(@"               </div>
                            </div>
                            <div class=""card-body"">
                                4 tiết
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-8""><span style=""font-size:14pt;font-weight:bold;"">Tổng số tiết học triển khai</span></div>
                    <div class=""col-sm-2""><span style=""font-size:18pt;font-weight:bold;color:#ff0000;"">36 tiết/năm học</span></div>
                    <div class=""col-sm-2""><span style=""font-size:18pt;font-weight:bold;color:#ff0000;"">12 tiết/hè</span></div>
                </div>
            </div>
            
        </div>

        
    </div>
</section>


<div class=""modal fade show"" id=""modal-import-invoiceitem"" aria-modal=""true"" role=""dialog"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
         ");
            WriteLiteral(@"       <h4 class=""modal-title"">Import sản phẩm vào đơn hàng</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">×</span>
                </button>
            </div>
            <div class=""modal-body"">
                <form id=""form-category"" class=""form-horizontal"" action=""/Contract/ImportInvoiceItem"" method=""post"" enctype=""multipart/form-data"">
                    ");
            EndContext();
            BeginContext(35554, 23, false);
#line 595 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Invoice\InvoiceDetail.cshtml"
                Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(35578, 496, true);
            WriteLiteral(@"
                    <input type=""file"" name=""postedFile"" />
                    <input type=""submit"" value=""Import"" class=""btn btn-sm btn-success"" />
                </form>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" onclick=""ClosePopupImport()"" data-dismiss=""modal"" >Đóng</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>





");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(36091, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36097, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb254044", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36144, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36150, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb255302", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36218, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36224, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb256560", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36287, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36293, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb257818", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36369, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(36375, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a39cccadb3b1a00dd82aeca7c208134ff7b17cb259076", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36458, 19641, true);
                WriteLiteral(@"

    <script>

        var arrInvoiceDetail = [];

        $(document).ready(function () {

            $("".date"").datepicker({
                format: ""dd/mm/yyyy""
            }).on('changeDate', function (e) {
                $(this).datepicker('hide');
            });


            $(""#btn-save"").click(function () {
                SaveInvoice();
            })

            $(""#btn-add-todetail"").click(function () {
                PickupItemToInvoiceDetail();
            });

            $(""#btn-approve"").click(function () {
                ChangeInvoiceStatus(""DaDuyet"");
            });

            $(""#btn-cancel"").click(function () {
                ChangeInvoiceStatus(""Huy"");
            });

            //$(""#Invoice_DiscountType"").change(function () {
            //    if ($(this).val() == ""Money"") {
            //        $(""#Invoice_DiscountAmount"").show();
            //        $(""#Invoice_DiscountPercent"").hide();
            //    } else {
            //     ");
                WriteLiteral(@"   $(""#Invoice_DiscountAmount"").hide();
            //        $(""#Invoice_DiscountPercent"").show();
            //    }
            //});



            if ($(""#Invoice_Id"").val() !== ""0"")
            {
               
                GetInvoiceItemDetail(""no"");
            }


            $(""#btn-export"").click(function () {
                ExportExcel();
            })


            $(""#btn-import"").click(function () {
                $(""#modal-import-invoiceitem"").show();
            });
            



            AutoCompleteSearchObj();
            AutoCompleteSearchStaff();
            AutoCompleteSearchProduct();

        });




        function AutoCompleteSearchObj() {
            var urlAutoComplete = ""/Invoice/SearhObjAutoComplete"";
            var invoiceType = $(""#Invoice_InvoiceType"").val();

            $(""#txt-autocomplete-obj"").typeahead({
                hint: true,
                highlight: true,
                minLength: 3,
                sou");
                WriteLiteral(@"rce: function (request, response) {
                    $.ajax({
                        url: urlAutoComplete,
                        data: JSON.stringify({ Keyword: request, Type: invoiceType }),
                        dataType: ""json"",
                        type: ""POST"",
                        contentType: ""application/json; charset=utf-8"",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var displayList = ""<table style='width:100%;border-collapse:collapse;' width='100%' border='1'> "" +
                                    ""<tbody><tr>"" +
                                    ""<td style='text-align:left;width:10%;'>"" + item.code + ""</td>"" +
                                    ""<td style='text-align:left;width:40%;'>"" + item.name + ""</td>"" +
                                    ""<td style='text-align:left;width:20%;'>"" + ");
                WriteLiteral(@"item.phone + ""</td>"" +
                                    ""<td style='text-align:left;width:30%;'>"" + item.address + ""</td>"" +
                                    ""</tr></tbody>"" +
                                    ""</table>"";
                                map[displayList] = {
                                    code: item.code,
                                    name: item.name,
                                    phone: item.phone,
                                    address: item.address
                                };
                                items.push(displayList);
                            });
                            response(items);
                            $("".dropdown-menu"").css(""height"", ""auto"");
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.");
                WriteLiteral(@"responseText);
                        }

                    });
                },
                updater: function (item) {

                    $(""#Invoice_ObjCode"").val(map[item].code);
                    $(""#Invoice_ObjName"").val(map[item].name);
                    $(""#txt-objphone"").val(map[item].phone);
                    $(""#txt-objaddress"").val(map[item].address);



                    return map[item].name;
                },
                afterSelect: function (item) {
                    // event after selected

                }

            });





        }


        function AutoCompleteSearchStaff() {
            var urlAutoComplete = ""/Invoice/SearhStaffAutoComplete"";

            $(""#txt-autocomplete-staff"").typeahead({
                hint: true,
                highlight: true,
                minLength: 3,
                source: function (request, response) {
                    $.ajax({
                        url: urlAutoComplete,
     ");
                WriteLiteral(@"                   data: JSON.stringify({ Keyword: request, Type: null }),
                        dataType: ""json"",
                        type: ""POST"",
                        contentType: ""application/json; charset=utf-8"",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var displayList = ""<table style='width:100%;border-collapse:collapse;' border='1'> "" +
                                    ""<tbody><tr>"" +
                                    ""<td style='text-align:left;width:10%;'>"" + item.userName + ""</td>"" +
                                    ""<td style='text-align:left;width:40%;'>"" + item.fullName + ""</td>"" +
                                    ""<td style='text-align:left;width:40%;'>"" + item.email + ""</td>"" +
                                    ""</tr></tbody>"" +
                                    ""</table>"";
   ");
                WriteLiteral(@"                             map[displayList] = {
                                    code: item.userName,
                                    name: item.fullName,
                                    email: item.email,
                                };
                                items.push(displayList);
                            });
                            response(items);
                            $("".dropdown-menu"").css(""height"", ""auto"");
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }

                    });
                },
                updater: function (item) {

                    $(""#Invoice_StaffCode"").val(map[item].code);
                    return map[item].name;
                },
                afterS");
                WriteLiteral(@"elect: function (item) {
                    // event after selected

                }

            });





        }


        function AutoCompleteSearchProduct() {
            var urlAutoComplete = ""/Invoice/SearhProductAutoComplete"";

            $(""#txt-product-autocomplete"").typeahead({
                hint: true,
                highlight: true,
                minLength: 3,
                source: function (request, response) {
                    $.ajax({
                        url: urlAutoComplete,
                        data: JSON.stringify({ Keyword: request, Type: null }),
                        dataType: ""json"",
                        type: ""POST"",
                        contentType: ""application/json; charset=utf-8"",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var displayList = ""<");
                WriteLiteral(@"div class='row' style='width:100%'>"" +
                                    ""<div class='col-md-2'>"" + item.productCode + ""</div>"" +
                                    ""<div class='col-md-6'>"" + item.productName + ""</div>"" +
                                    ""<div  class='col-md-2'>"" + item.unit + ""</div>"" +
                                    ""<div  class='col-md-2'>"" + item.price + ""</div>"" +
                                    ""</div>"";
                                map[displayList] = {
                                    productCode: item.productCode,
                                    productName: item.productName,
                                    unit: item.unit,
                                    price: item.price
                                };
                                items.push(displayList);
                            });
                            response(items);
                            $("".dropdown-menu"").css(""height"", ""auto"");
                        },
");
                WriteLiteral(@"                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }

                    });
                },
                updater: function (item) {

                    var proSelected = {
                        ProductCode: map[item].productCode,
                        ProductName: map[item].productName,
                        Unit: map[item].unit,
                        Quanti: 1,
                        Price: map[item].price,
                        VAT:0
                    };

                    PickupItemToInvoiceDetail(proSelected);

                    return map[item].productCode + ""-"" + map[item].productName + ""-"" + map[item].unit;
                },


            });





        }

        function SaveInvoice() {
            var valid = Validat");
                WriteLiteral(@"eInvoice();
            if (valid) {
                var invoice = FormToObject(""#form-invoice"", ""Invoice."");
                invoice.InvoiceDate = ConverFormatDate($(""#Invoice_InvoiceDate"").val());
                invoice.DiscountType = ""Money""; //$(""#Invoice_DiscountType"").val();
                invoice.DiscountAmount = $(""#Invoice_DiscountAmount"").val();
                invoice.DiscountPercen = $(""#Invoice_DiscountPercen"").val();
                invoice.VAT = $(""#Invoice_VAT"").val();
                invoice.ObjName = $(""#txt-autocomplete-obj"").val();
                $.ajax({
                    type: ""POST"",
                    contentType: 'application/json; charset=utf-8',
                    url: ""/Invoice/SaveInvoice"",
                    dataType: 'json',
                    data: JSON.stringify(invoice),
                    beforeSend: function () {
                        ShowWaiting();
                    },
                    success: function (res) {
                        Hi");
                WriteLiteral(@"deWaiting();
                        if (res.isSuccess === true) {
                            bootbox.alert(AlertSuccess(""Lưu dữ liệu thành công""), function () {
                                var invoiceType = $(""#Invoice_InvoiceType"").val();
                                location.href = ""/invoice/invoicedetail/"" + invoiceType + ""/"" + res.longValReturn;
                            });
                        } else {
                            bootbox.alert(AlertFail(res.errorMessage));
                        }

                    }
                });
            }
        }

        function ValidateInvoice() {
            var resutlValid = $(""#form-invoice"").validate({
                rules: {
                   // ""Invoice.Code"": ""required"",
                    ""Invoice.InvoiceDate"": ""required"",
                    ""txt-autocomplte-obj"": ""required"",
                    ""txt-autocomplete-staff"":""required""
                },
                messages: {
                 //   """);
                WriteLiteral(@"Invoice.Code"": null,
                    ""Invoice.InvoiceDate"": null,
                    ""txt-autocomplte-obj"": null,
                    ""txt-autocomplete-staff"": null
                }
            }).form();
            return resutlValid;
        }


        


       

        function ScanUpdateInvoiceDetailRow(itemId) {
            
            var quanti = parseFloat($(""#txt-proc-quanti-"" + itemId).val());
            var price = parseFloat($(""#txt-proc-price-"" + itemId).val());

            var postParam = {
                InvoiceItemId: itemId,
                Quanti: quanti,
                Price: price
            };

            $.ajax({
                type: ""POST"",
                contentType: 'application/json; charset=utf-8',
                url: ""/Invoice/UpdateInvoiceDetailRow"",
                dataType: 'json',
                data: JSON.stringify(postParam),
                //beforeSend: function () {
                //    ShowWaiting();
                ");
                WriteLiteral(@"//},
                success: function (res) {
                    GetInvoiceItemDetail(""no"");
                }
            });


            debugger;
   
        }


        function RenderPriceInvoiceDetail(price, iditem) {
            return ""<input type='text' class='form-control number-divide' id='txt-proc-price-"" + iditem + ""' onblur='ScanUpdateInvoiceDetailRow("" + iditem + "")' value='"" + price + ""' />"";
        }
        function RenderTotalInvoiceDetail(total) {
            return ""<div style='width:100%;text-align:right;'><span class='number-divide' style='text-align:right;font-weight:normal;font-size:11pt;'>"" + total + ""</span></div>"";
        }
        function RenderDeleteInvoiceDetailBtn(itemId) {
            return ""<div class='div-table-action'><span class='fa fa-trash btn-delete' onclick='DeleteInvoiceItem("" + itemId + "")' ></span></div>"";
        }
        function RenderQuantiInvoiceDetail(quanti, iditem) {
            return ""<input type='number' id='txt-proc-quanti-");
                WriteLiteral(@""" + iditem + ""' onblur='ScanUpdateInvoiceDetailRow("" + iditem + "")' value='"" + quanti + ""' class='form-control number-divide' />"";
        }
        function PickupItemToInvoiceDetail(itemSelected)
        {

            itemSelected.InvoiceId = $(""#Invoice_Id"").val();

            $.ajax({
                type: ""POST"",
                contentType: 'application/json; charset=utf-8',
                url: ""/Invoice/PickupProductToInvoiceDetail"",
                dataType: 'json',
                data: JSON.stringify(itemSelected),
                //beforeSend: function () {
                //    ShowWaiting();
                //},
                success: function (res) {
                    ResetAutocomplteProduct();
                    ScanUpdateInvoiceDetailRow();
                    GetInvoiceItemDetail(""no"");
                }
            });


            
        }

        function DeleteInvoiceItem(itemId) {
            $.ajax({
                type: ""GET"",
                ");
                WriteLiteral(@"contentType: 'application/json; charset=utf-8',
                url: ""/Invoice/DeleteInvoiceItem?InvoiceItemId="" + itemId,
                success: function (result) {
                    GetInvoiceItemDetail(""no"");
                }
            });

        }

        function ChangeInvoiceStatus(desStatus) {
            let invoiceId = $(""#Invoice_Id"").val();
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/Invoice/ChangeStausInvoice?invoiceId="" + invoiceId + ""&status="" + desStatus,
                success: function (result) {
                    if (result.isSuccess === true) {
                        bootbox.alert(AlertSuccess(""Chuyển trạng thái thành công""), function () {
                            var invoiceType = $(""#Invoice_InvoiceType"").val();
                            location.href = ""/invoice/invoicedetail/"" + invoiceType + ""/"" + invoiceId;
                        });
                   ");
                WriteLiteral(@" } else {
                        bootbox.alert(AlertFail(res.errorMessage));
                    }
                }
            });

        }



        function FormatNumberDevide() {
            $('.number-divide').divide({
                delimiter: ',',
                divideThousand: true,
                delimiterRegExp: /[\.\,\s]/g

            });
        }

        function ResetAutocomplteProduct() {
            $(""#txt-product-autocomplete"").val(null);

        }


        function GetInvoiceItemDetail(ispromotion) {
            var invoiceId = $(""#Invoice_Id"").val();
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/Invoice/GetInvoiceItemDetail?invoiceId="" + invoiceId + ""&promtion="" + ispromotion,
                success: function (result) {


                    InitTableInvoiceDetail(result.items);
                    $(""#invoice-total"").html(result.totalBefVAT);
        ");
                WriteLiteral(@"            $(""#invoice-total-afterVAT"").html(result.totalAfterVAT);
                    $(""#invoice-owe"").html(result.totalAfterVAT);
                    FormatNumberDevide();
                }
            });
        }


        function InitTableInvoiceDetail(arrData) {

            $(""#table-invoice-detail"").DataTable({
                data: arrData,
                paging: false,
                orderMulti: false,
                lengthChange: false,
                filter: false,
                ordering: false,
                info: false,
                columns: [
                    { ""data"": ""productCode"", ""width"": ""10%"" },
                    { ""data"": ""productName"", ""width"": ""40%"" },
                    { ""data"": ""unit"", ""width"": ""10%"" },
                    {
                        ""data"": ""quanti"", ""width"": ""5%"", ""render"": function (data, type, row, meta) {
                            return RenderQuantiInvoiceDetail(data, row[""id""], false);
                        }
");
                WriteLiteral(@"                    },
                    {
                        ""data"": ""price"", ""width"": ""5%"", ""render"": function (data, type, row, meta) {
                            return RenderPriceInvoiceDetail(data, row[""id""], false);
                        }
                    },
                    {
                        ""data"": ""totalAfterVAT"", ""width"": ""15%"", ""render"": function (data, type, row, meta) {
                            return RenderTotalInvoiceDetail(data);
                        }
                    },
                    {
                        ""data"": ""id"", ""width"": ""5%"", ""render"": function (data, type, row, meta) {
                            return RenderDeleteInvoiceDetailBtn(data);
                        }
                    },
                ],
                fixedColumns: true,
                destroy: true


            });
        }


        function ExportExcel() {

            let invoiceId = $(""#Invoice_Id"").val();
            location.href =");
                WriteLiteral(" \"/Invoice/ExportInvoiceItem?invoiceId=\" + invoiceId;\r\n        }\r\n\r\n        function ClosePopupImport() {\r\n            $(\"#modal-import-invoiceitem\").hide();\r\n        }\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DAL.Models.Invoice.InvoiceDetailViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
