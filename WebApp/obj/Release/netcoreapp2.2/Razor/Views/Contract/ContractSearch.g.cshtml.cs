#pragma checksum "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d0e4331300412a145d70a48de76518602c212de5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Contract_ContractSearch), @"mvc.1.0.view", @"/Views/Contract/ContractSearch.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Contract/ContractSearch.cshtml", typeof(AspNetCore.Views_Contract_ContractSearch))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 8 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
using DAL;

#line default
#line hidden
#line 9 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
using DAL.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d0e4331300412a145d70a48de76518602c212de5", @"/Views/Contract/ContractSearch.cshtml")]
    public class Views_Contract_ContractSearch : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DAL.Models.Contract.ContractFilterModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datepicker/datepicker3.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/css/dataTables.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datepicker/bootstrap-datepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatable/jquery.datatable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/datatables-fixedcolumns/js/dataTables.fixedColumns.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
  
    
    ViewData["Title"] = "Danh sách hợp đồng";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(155, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("styles", async() => {
                BeginContext(204, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(210, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d0e4331300412a145d70a48de76518602c212de56561", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(279, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(285, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d0e4331300412a145d70a48de76518602c212de57893", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(372, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(378, 98, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d0e4331300412a145d70a48de76518602c212de59225", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(476, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            BeginContext(483, 157, true);
            WriteLiteral("<section class=\"content-header\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-sm-6\">\r\n                <h1>");
            EndContext();
            BeginContext(642, 17, false);
#line 20 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
                Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(660, 254, true);
            WriteLiteral("</h1>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <ol class=\"breadcrumb float-sm-right\">\r\n                    <li class=\"breadcrumb-item\"><a href=\"#\">Trang chủ</a></li>\r\n                    <li class=\"breadcrumb-item active\">");
            EndContext();
            BeginContext(916, 17, false);
#line 25 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
                                                   Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(934, 448, true);
            WriteLiteral(@"</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class=""content"">
    <div class=""card"">
        <div class=""card-header"">
            <div class=""row"">
                <div class=""col-sm-2"">
                    <label>Nhóm kinh doanh</label>
                    <select class=""form-control"" id=""ddl-team"">
                        <option value="""">Tất cả</option>
");
            EndContext();
#line 39 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
                           
                            List<DAL.Entities.SaleTeam> lstSaleTeam = (List<DAL.Entities.SaleTeam>)ViewBag.AllTeamDDL;
                            foreach (var team in lstSaleTeam)
                            {

#line default
#line hidden
            BeginContext(1625, 39, true);
            WriteLiteral("                                <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1664, "\"", 1684, 1);
#line 43 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 1672, team.Code, 1672, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1685, 1, true);
            WriteLiteral(">");
            EndContext();
            BeginContext(1688, 9, false);
#line 43 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
                                                         Write(team.Name);

#line default
#line hidden
            EndContext();
            BeginContext(1698, 11, true);
            WriteLiteral("</option>\r\n");
            EndContext();
#line 44 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
                            }
                        

#line default
#line hidden
            BeginContext(1767, 532, true);
            WriteLiteral(@"                    </select>
                </div>
                <div class=""col-sm-2"">
                    <label>Nhân viên</label>
                    <select class=""form-control"" id=""ddl-member"">
                        
                    </select>
                </div>
                <div class=""col-sm-2"">
                    <label>Tình trạng</label>
                    <select class=""form-control"" id=""ddl-status"">
                        <option value="""">Tất cả</option>
                        <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2299, "\"", 2336, 1);
#line 58 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 2307, Contanst.ContractStatus_Nhap, 2307, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2337, 47, true);
            WriteLiteral(">Nháp</option>\r\n                        <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2384, "\"", 2425, 1);
#line 59 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 2392, Contanst.ContractStatus_ChoDuyet, 2392, 33, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2426, 52, true);
            WriteLiteral(">Chờ duyệt</option>\r\n                        <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2478, "\"", 2518, 1);
#line 60 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 2486, Contanst.ContractStatus_DaDuyet, 2486, 32, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2519, 51, true);
            WriteLiteral(">Đã duyệt</option>\r\n                        <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2570, "\"", 2609, 1);
#line 61 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 2578, Contanst.ContractStatus_TuChoi, 2578, 31, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2610, 50, true);
            WriteLiteral(">Từ chối</option>\r\n                        <option");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 2660, "\"", 2696, 1);
#line 62 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 2668, Contanst.ContractStatus_Huy, 2668, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2697, 802, true);
            WriteLiteral(@">Huỷ</option>
                    </select>
                </div>
                <div class=""col-sm-2"">
                    <label>Loại HĐ</label>
                    <select class=""form-control"" id=""ddl-contract-type"">
                        <option value=""0"">Tất cả</option>
                        <option value=""1"">STEM theo tiết</option>
                        <option value=""2"">STEM theo tháng</option>
                        <option value=""3"">KNS theo tiết</option>
                        <option value=""4"">KNS theo tháng</option>
                    </select>
                </div>
                <div class=""col-sm-2"">
                    <label>Từ ngày</label>
                    <div class=""input-group date"">
                        <input type=""text"" id=""FromDate""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 3499, "\"", 3524, 1);
#line 78 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 3507, Model.FromDate, 3507, 17, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3525, 383, true);
            WriteLiteral(@" class=""form-control"">
                        <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                    </div>
                </div>
                <div class=""col-sm-2"">
                    <label>Đến ngày</label>
                    <div class=""input-group date"">
                        <input type=""text"" id=""ToDate""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 3908, "\"", 3931, 1);
#line 85 "F:\Projects\OnSVN\IchiWeb\WebApp\Views\Contract\ContractSearch.cshtml"
WriteAttributeValue("", 3916, Model.ToDate, 3916, 15, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3932, 3718, true);
            WriteLiteral(@" class=""form-control"">
                        <span class=""input-group-addon group-date-icon""><i class=""far fa-calendar-alt""></i></span>
                    </div>
                </div>
                <div class=""col-sm-2"">
                    <label>Tình trạng hết hạn</label>
                    <select class=""form-control"" id=""ddl-expire-status"">
                        <option value="""">Tất cả</option>
                        <option value=""ok"">Còn hạn</option>
                        <option value=""warning"">Cảnh báo hết hạn</option>
                        <option value=""expire"">Sắp hết hạn</option>
                    </select>
                </div>
                <div class=""col-sm-2"">
                    <label>Tìm theo mã HĐ</label>
                    <input type=""text"" class=""form-control"" placeholder=""Mã tự động hoặc số HĐ"" id=""txtkeyword1"" />
                </div>
                <div class=""col-sm-4"">
                    <label>Tìm theo KH</label>
                    <inpu");
            WriteLiteral(@"t type=""text"" class=""form-control"" placeholder=""Mã hoặc tên khách hàng"" id=""txtkeyword2"" />
                </div>

                <div class=""col-sm-4"">
                    <button class=""btn btn-sm btn-warning btn-filter""><i class=""fa fa-search"" id=""btn-search""></i></button>&nbsp;
                    <button class=""btn btn-sm btn-success btn-filter"" id=""btn-export-search""><i class=""fa fa-download""></i>&nbsp;Export excel</button>
                    <a class=""btn btn-sm btn-warning btn-filter"" href=""/contract/contractdetail""><i class=""fa fa-plus-circle""></i>&nbsp;Tạo mới</a>&nbsp;

                </div>
            </div>

        </div>
        <div class=""card-body"">
            <div class=""text-right"">
               
            </div>
            <table class=""table table-bordered table-hover dataTable"" id=""table-contract"">
                <thead>
                    <tr>
                        <th width=""100px"">Mã HĐ</th>
                        <th width=""150px"">Mã KH</th>
    ");
            WriteLiteral(@"                    <th width=""200px"">Tên KH</th>
                        <th width=""150px"">Loại HĐ</th>
                        <th width=""150px"">Ngày HĐ</th>
                        <th width=""100px"">Số HĐ</th>
                        <th width=""150px"">Tình trạng HĐ</th>
                        <th width=""150px"">Hiệu lực từ</th>
                        <th width=""150px"">Hiệu lực đến</th>
                        <th width=""150px"">Thời hạn HĐ</th>
                        <th width=""150px"">Nhóm kinh doanh</th>
                        <th width=""150px"">NV tư vấn</th>
                        <th width=""100px"">Định hướng</th>
                        <th width=""130px"">Ngày định hướng</th>
                        <th width=""100px"">Cài giáo án</th>
                        <th width=""100px"">SL máy cài</th>
                        <th width=""100px"">Nguồn GV</th>
                        <th width=""200px"">Chương trình</th>
                        <th width=""200px"">Chính sách</th>
                       ");
            WriteLiteral(@" <th width=""150px"">Ghi chú</th>
                        <th width=""150px"">Sỉ số lớp</th>
                        <th width=""150px"">Sỉ số HS/lớp</th>
                        <th width=""150px"">Tiết học/tháng</th>
                        <th width=""150px"">Đã hoàn thành</th>
                        <th width=""150px"">Đơn giá/đơn vị</th>
                        <th width=""150px"">Giá triển khai/đơn vị</th>
                        <th width=""150px"">Người tạo HĐ</th>
                        <th width=""150px"">Ngày tạo HĐ</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</section>
");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(7667, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(7673, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0e4331300412a145d70a48de76518602c212de522717", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7741, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(7747, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0e4331300412a145d70a48de76518602c212de523973", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7810, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(7816, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0e4331300412a145d70a48de76518602c212de525229", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7892, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(7898, 87, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d0e4331300412a145d70a48de76518602c212de526485", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7985, 8947, true);
                WriteLiteral(@"

    <script>
        var tableId = ""#table-contract"";
        var ajaxURL = ""/Contract/SearchContract"";
        var columnData = [
            {
                ""data"": ""id"", ""render"": function (data, type, row, meta) {
                    return RenderTableAction(data, row[""code""]);
                }
            },
            { ""data"": ""customerCode"" },
            { ""data"": ""customerName"" },
            { ""data"": ""contractType"" },
            { ""data"": ""contractDate"" },
            { ""data"": ""contractNo"" },
            {
                ""data"": ""status"", ""render"": function (data, type, row, meta) {
                    return RenderStatusContract(data);
                }
            },
            { ""data"": ""effectFrom"" },
            { ""data"": ""effectTo"" },
            {
                ""data"": ""expireStatus"", ""render"": function (data, type, row, meta) {
                    return RenderExpireStatus(data, row[""dayExpireRemain""]);
                }
            },
            { ");
                WriteLiteral(@"""data"": ""teamSaleName"" },
            { ""data"": ""staffRefer"" },
            {
                ""data"": ""orientated"", ""render"": function (data, type, row, meta) {
                    return RenderDinhHuong(data);
                }
            },
            { ""data"": ""orientatedDate"" },
            {
                ""data"": ""installProgram"", ""render"": function (data, type, row, meta) {
                    return RenderGiaoAn(data);
                }
            },
            { ""data"": ""quantiInstall"" },
            { ""data"": ""teacherResouce"" },
            {
                ""data"": ""program"", ""render"": function (data, type, row, meta) {
                    return RenderLongText(data);
                }
            },
            {
                ""data"": ""policy"", ""render"": function (data, type, row, meta) {
                    return RenderLongText(data);
                }
            },
            {
                ""data"": ""generalNote"", ""render"": function (data, type, row, meta) {");
                WriteLiteral(@"
                    return RenderLongText(data);
                }
            },
            { ""data"": ""quantiClass"" },
            { ""data"": ""quantiMember"" },
            { ""data"": ""quantiUnitOnMonth"" },
            { ""data"": ""quantiCompleted"" },
            { ""data"": ""price"" },
            { ""data"": ""priceDeploy"" },
            { ""data"": ""createdBy"" },
            { ""data"": ""createdDate"" },
        ];




        $(document).ready(function () {

            SearchContract();
            $(""#btn-search"").click(function () {
                SearchContract();
            });

            $("".date"").datepicker({
                format: ""dd/mm/yyyy""
            }).on('changeDate', function (e) {
                $(this).datepicker('hide');
            });
            GetMemberInTeam();
            $(""#ddl-team"").change(function () {
                GetMemberInTeam();
            });

            $(""#btn-export-search"").click(function () {
                ExportReport();
     ");
                WriteLiteral(@"       });
        })


        function GetMemberInTeam() {
            let teamCode = $(""#ddl-team"").val();
            $.ajax({
                type: ""GET"",
                contentType: 'application/json; charset=utf-8',
                url: ""/SaleTeam/GetListMemberInTeam?teamCode="" + teamCode,
                success: function (result) {
                    let htmlMember = ""<option value=''>Tất cả</option>"";
                    if (result.length > 0)
                    {
                        $.each(result, function (index, value) {
                            htmlMember = htmlMember + ""<option value='"" + value.userName+""'>""+value.fullName+""</option>"";
                        });
                    }
                    $(""#ddl-member"").html(htmlMember);
                }
            });
        }



        function SearchContract() {
            var searchModel = {
                TeamCode:$(""#ddl-team"").val(),
                Staff: $(""#ddl-member"").val(),
            ");
                WriteLiteral(@"    Status: $(""#ddl-status"").val(),
                ContractType: $(""#ddl-contract-type"").val(),
                FromDate: ConverFormatDate($(""#FromDate"").val()),
                ToDate: ConverFormatDate($(""#ToDate"").val()),
                ExpireStatus: $(""#ddl-expire-status"").val(),
                keyword1: $(""#txtkeyword1"").val(),
                keyword2: $(""#txtkeyword2"").val()
            };

            GenrateDataTableSearch(tableId, ajaxURL, columnData, searchModel);



        }
        function RenderTableAction(contractId,contractCode) {
            var html = ""<div class='div-table-action'>"" +
                ""<a target='blank' href='/contract/contractdetail/"" + contractId + ""'><span class='fa fa-eye'></span>&nbsp;"" + contractCode + ""</a>&nbsp;"" +
                ""<span class='fa fa-trash' onclick='DeleteContract("" + contractId+"")' ></span>"" +
                ""</div>"";
            return html;
        }
        function GotoInvoiceDetail(contractI) {
            var urlEdit");
                WriteLiteral(@" = ""/contract/contractdetail/"" + contractI;
            window.open(urlEdit, '_blank');
        }
        function RenderStatusContract(status) {
            var statusHTML = """";
            if (status == ""draft"") {
                statusHTML = ""<span class='badge badge-primary badge-status'>Nháp</span>"";
            }
            else if (status == ""waiting"") {
                statusHTML = ""<span class='badge badge-warning badge-status'>Chờ duyệt</span>"";
            }
            else if (status == ""approved"") {
                statusHTML = ""<span class='badge badge-success badge-status'>Đã duyệt</span>"";
            }
            else if (status == ""cancelled"") {
                statusHTML = ""<span class='badge badge-danger badge-status'>Hủy</span>"";
            }
            else if (status == ""rejected"") {
                statusHTML = ""<span class='badge badge-danger badge-status'>Từ chối</span>"";
            }
            return statusHTML;
        }

        function RenderExpire");
                WriteLiteral(@"Status(ExpireStatus, remainDay)
        {
            var statusExpire = """";
            if (ExpireStatus == ""ok"") {
                statusExpire = ""<span class='badge badge-success badge-status'>"" + remainDay+""</span>"";
            }
            else if (ExpireStatus == ""warning"") {
                statusExpire = ""<span class='badge badge-warning badge-status'>"" + remainDay +""</span>"";
            }
            else if (ExpireStatus == ""expired"") {
                statusExpire = ""<span class='badge badge-danger badge-status'>"" + remainDay +""</span>"";
            }
            return statusExpire;
        }


        function RenderDinhHuong(dinhHuong) {
            var text = """";
            if (dinhHuong == true) {
                text = ""<span>Đã định hướng</span>"";
            }
            else {
                text = ""<span>Chưa</span>"";
            }


            return text;
        }


        function RenderGiaoAn(giaoan) {
            var text = """";
            if ");
                WriteLiteral(@"(giaoan == true) {
                text = ""<span>Đã định hướng</span>"";
            }
            else {
                text = ""<span>Chưa</span>"";
            }


            return text;
        }


        function RenderLongText(data) {
            let resultText = """";
            if (data != null && data.length > 25) {
                resultText = data.substr(0, 25) + ""..."";
            } else {
                resultText = data;
            }
            return resultText;
        }

        function ExportReport() {
            var searchModel = {
                TeamCode: $(""#ddl-team"").val(),
                Staff: $(""#ddl-member"").val(),
                Status: $(""#ddl-status"").val(),
                ContractType: $(""#ddl-contract-type"").val(),
                FromDate: ConverFormatDate($(""#FromDate"").val()),
                ToDate: ConverFormatDate($(""#ToDate"").val()),
                ExpireStatus: $(""#ddl-expire-status"").val(),
                keyword1: $(""#txtkeywo");
                WriteLiteral(@"rd1"").val(),
                keyword2: $(""#txtkeyword2"").val()
            };
            location.href = ""/contract/ExportContract?filfer="" + JSON.stringify(searchModel);
        }


        function DeleteContract(contractId) {
            bootbox.confirm(""Bạn có chắc muốn xóa hợp đồng này?"", function (confi) {
                if (confi) {
                    $.ajax({
                        type: ""GET"",
                        url: ""/Contract/DeleteContract/"" + contractId,
                        dataType: 'json',
                        success: function (res) {
                            SearchContract();

                        }
                    });
                }
            });
        }


    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DAL.Models.Contract.ContractFilterModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
