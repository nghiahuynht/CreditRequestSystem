@using System.Security.Claims
@using WebApp.ExcelHelper;
@{
    ViewData["Title"] = "Danh sách nhân viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string Permission = User.Claims.FirstOrDefault(x => x.Type == "Permission").Value;
    bool isDelete = AuthHelper.GetPermissionHelper(Permission).Contains(PermissionHelper.DanhSachNhanVien.Delete) ;
    bool isAdd = AuthHelper.GetPermissionHelper(Permission).Contains(PermissionHelper.DanhSachNhanVien.Add);
    bool isEdit = AuthHelper.GetPermissionHelper(Permission).Contains( PermissionHelper.DanhSachNhanVien.Edit);
    bool isPermission = AuthHelper.GetPermissionHelper(Permission).Contains( PermissionHelper.DanhSachNhanVien.PERMISSION);
}
@model DAL.Models.UserInfo.UserParViewModel
@section styles{

    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css" rel="stylesheet" />
    <style>
        .div-member {
            margin-left: 20px;
        }

            .div-member .nav .nav-link {
                margin: 4px 0 !important;
            }

        .card .nav.flex-column > li {
            border-bottom: 0px;
        }

        .span-team-name {
            font-weight: bold
        }

        .i-edit-saleteam {
            color: #555;
        }

        .i-delete-saleteam {
            color: #ff0000;
        }

        .typeahead {
            width: 100% !important;
        }
    </style>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@(ViewData["Title"])</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">@(ViewData["Title"])</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">

    <div class="row">

        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-3">
                            <label>Phòng ban</label>
                            <select class="form-control" id="ddl-role">
                                <option value="all">Tất cả</option>
                                @{
                                    foreach (var opt in Model.LstDepartment)
                                    {
                                        <option value="@opt.Id">@opt.Name</option>
                                    }
                                }
                            </select>
                        </div>

                       @*  <div class="col-sm-3">
                            <label>Nhóm quyền</label>
                            <select class="form-control" id="ddl-role">
                                <option value="all">Tất cả</option>
                                @{
                                    foreach (var opt in Model.LstRoles)
                                    {
                                        <option value="@opt.Value">@opt.Text</option>
                                    }
                                }
                            </select>
                        </div> *@
                        <div class="col-sm-3">
                            <label>Tìm theo SĐT/tên/email</label>
                            <input type="text" class="form-control" id="txtkeyword" />
                        </div>
                        <div class="col-sm-3">
                            <button id="btn-search" class="btn btn-filter btn-sm btn-primary"><i class="fa fa-search"></i>&nbsp;Tìm kiếm</button>
                            @if (isAdd == true)
                            {
                                <button id="btn-createNV" class="btn btn-filter btn-sm btn-success" onclick="showModalCreateNV(0)"><i class="fa fa-plus-circle"></i>&nbsp;Thêm mới</button>
                            }

                        </div>

                    </div>
                </div>

                <div class="card-body ">
                    <table class="table table-bordered table-hover dataTable" id="table-userinfo" width="100%">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th width="100px">Tên đăng nhập</th>
                                <th width="200px">Tên đầy đủ</th>
                                <th>SDT</th>
                                <th>Email</th>
                                <th width="150px">Nhóm quyền</th>
                                <th width="150px">Chức danh</th>
                                <th width="100px">Hoạt động</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>

    </div>


</section>


<!--modal add-->
<div class="modal modal-blur fade" id="modal_add_nv" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_nv">

    </div>
</div>

<!--modal phan quyền-->
<div class="modal modal-blur fade" id="modal_permission_user" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_permission_user">

    </div>
</div>


@section scripts{
    <script src="~/plugins/datatable/jquery.datatable.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/datatables-fixedcolumns/js/dataTables.fixedColumns.js"></script>

    <script src="~/plugins/mdb-treeview/forms-free.js"></script>
    <script src="~/plugins/mdb-treeview/scrolling-navbar.js"></script>
    <script src="~/plugins/mdb-treeview/treeview.js"></script>
    <script src="~/plugins/mdb-treeview/wow.js"></script>
    <script src="~/js/jquery.validate.js"></script>
    <script>
        const isEdit = @isEdit.ToString().ToLower();
        const isDelete = @isDelete.ToString().ToLower();
        const isPermission = @isPermission.ToString().ToLower();
        var tableId = "#table-userinfo";
        var ajaxURL = "/Account/SearchUserInfo";
        var columnData = [
            { "data": "id", visible: false },

            { "data": "userName" },
            { "data": "fullName" },
            {
                "data": "phone", "render": function (data, type, row, meta) {
                    if (data == "NULL" || data == null) {
                        return ""
                    }
                    else {
                        return data
                    }

                }
            },
            { "data": "email" },
            { "data": "roleName" },
            { "data": "title" },

            {
                "data": "isActive", "render": function (data, type, row, meta) {
                    if (data == "Yes") {
                        return "<i class='text-success' >Hoạt động</i>"
                    }
                    else {
                        return "<i class='text-danger' >Ngưng hoạt động</i>"
                    }
                }
            },
            {
                "data": "id", "render": function (data, type, row, meta) {
                    return RenderTableAction(data);
                }
            },


        ];

        var arrMembers = [];


        $(document).ready(function () {

            SearchUserInfo();

            $('.treeview-animated').mdbTreeview();

            $("#btn-search").click(function () {
                SearchUserInfo();
            });

        });
        function RenderTableAction(userId) {
            let html = `<div class='div-table-action'>`;

            // Check if Edit action should be added
            if (isEdit) {
                html += `<i class='fa fa-edit' onclick='showModalCreateNV(${userId})' title='Sửa'></i>&nbsp`;
            }

            // Check if Delete action should be added
            if (isDelete) {
                html += `<i class='fa fa-trash' onclick='DeleteNV(${userId})' title='Xóa'></i>&nbsp`;
            }

            // Check if Permission action should be added
            if (isPermission) {
                html += `<i class='fas fa-user-shield' onclick='showModalPermissionUser(${userId})' title='Phân quyền'></i>`;
            }
            html += `</div>`;

            return html;
        }

        function SearchUserInfo() {

            var dataSearch = {
                RoleCode: 'all',
                Keyword: $("#txtkeyword").val()
            };
            GenrateDataTableSearch(tableId, ajaxURL, columnData, dataSearch);

        }

        function showModalCreateNV(id) {
            $.ajax({
                url: '/account/Add/' + id, // Đảm bảo đường dẫn này đúng với action của bạn
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_nv').html(response);

                    // Hiển thị modal
                    $("#modal_add_nv").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        function CreateUser() {

            var isValidate = validateData();

            if (isValidate == true) {


                var saveModel = {
                    User: {
                        Id: $("#a_userId").val(),
                        UserName: $("#a_email").val(),
                        FullName: $("#a_full_name").val(),
                        Email: $("#a_email").val(),
                        Phone: $("#a_phone").val(),
                        Title: $("#a_chuc_danh").val(),
                        IsActive: true,
                    },
                    RoleSelected: '',
                    DepartmentSelected: $("#a_department").val(),
                    LstRoles: [],
                    LstDepartment: [],
                };
                console.log("saveModel", saveModel)
                $.ajax({
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/SaveUserInfo",
                    dataType: 'json',
                    data: JSON.stringify(saveModel),
                    beforeSend: function () {

                    },
                    success: function (res) {
                        if (res.isSuccess === true) {
                            toastr.success('Thêm nhân viên thành công!', 'Thành công', { positionClass: "toast-top-center" });
                            SearchUserInfo();
                            $("#modal_add_nv").modal("hide")
                        } else {
                            toastr.error('Có lỗi khi thêm nhân viên. Vui lòng thử lại!', 'Lỗi', { positionClass: "toast-top-center" });
                        }

                    }
                });
            }
        }

        function validateData() {
            var resultValid = $("#frmCreateNV").validate({
                rules: {
                    "full_name": {
                        required: true,
                    },
                    "phone": {
                        required: true,
                    },
                    "email": {
                        required: true,
                    },
                    "department": {
                        required: true,
                    }

                },
                messages: {
                    "full_name": "Tên không được để trống!",
                    "phone": "SĐT không được để trống!",
                    "email": "Email không được để trống!",
                    "role": "Nhóm quyền không được để trống!",
                    "department": "Bộ phân không được để trống!"
                },

            }).form();

            return resultValid;
        }

        function closeModal_CreateUser() {

            $("#modal_add_nv").modal("hide")

        }
        function DeleteNV(id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/Account/DeleteAccount',
                        type: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Xóa nhân viên thành công!', 'Thành công', { positionClass: "toast-top-center" });
                                SearchUserInfo();
                            }
                            else {
                                console.error(response);
                                toastr.error('Có lỗi xảy ra khi xóa nhân viên !', 'Lỗi', { positionClass: "toast-top-center" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Có lỗi khi tải nội dung modal: ", error);
                            alert("Lỗi tải modal, vui lòng thử lại sau.");
                        }
                    });

                }
            });
        }

        //----PHÂN QUYÊN USER----
        function showModalPermissionUser(id) {
            $.ajax({
                url: '/account/FormPermissonUser/' + id,
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_permission_user').html(response);

                    // Hiển thị modal
                    $("#modal_permission_user").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        function closeModal_CreatePerssion() {

            $("#modal_permission_user").modal("hide")

        }

        function CreatePerssion() {
            if (validatePermissionUser() == true) {
                // Get selected menu
                const menuElement = document.getElementById('menu');
                const menuId = menuElement.value; // Get the selected menu's value (Id)
                const menuText = menuElement.options[menuElement.selectedIndex].text; // Get the selected menu's text (Id)
                const menuPrefix = menuElement.options[menuElement.selectedIndex]?.getAttribute('data-prefix'); // Get the prefix attribute

                //// Get all checked checkboxes
                //const checkedPermissions = Array.from(document.querySelectorAll('input[name="permissions"]:checked'))
                //    .map(checkbox => menuPrefix+"_"+checkbox.value);
                // Get all checked checkboxes with their value and text
                const checkedPermissions = Array.from(document.querySelectorAll('input[name="permissions"]:checked'))
                    .map(checkbox => ({
                        Permission: `${menuPrefix}_${checkbox.value}`, // Prefix and value
                        PermissionName: document.querySelector(`label[for="${checkbox.id}"]`).innerText
                    }));



                // Example: Sending data to a server via AJAX
                const userId = document.getElementById('a_userId').value; // Get the user ID
                const dataPost = {
                    userId: userId,
                    menuId: menuId,
                    menuPrefix: menuPrefix,
                    permission: checkedPermissions
                };
                // Log or use the data as needed
                console.log('Menu ID:', dataPost);
                $.ajax({
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    url: "/Account/CreatePermissionUser",
                    dataType: 'json',
                    data: JSON.stringify(dataPost),
                    beforeSend: function () {

                    },
                    success: function (res) {
                        if (res.isSuccess === true) {
                            toastr.success('Phân quyền thành công!', 'Thành công', { positionClass: "toast-top-center" });
                            const permissionNames = checkedPermissions.map(p => p.PermissionName).join(',');
                            var html =`<tr>
                                        <td>
                                            ${menuText}
                                        </td>
                                        <td>
                                            ${permissionNames}
                                        </td>
                                        <td style="text-align:center;">

                                            <span class="fa fa-trash" onclick="RemovePermissionByUserIdMenuId(${res.longValReturn})"></span>
                                        </td>
                                     </tr>`
                            $('#table_thong_tin_quyen_theo_menu').append(html);
                            //$("#modal_permission_user").modal("hide")
                        } else {
                            toastr.error('Có lỗi khi phân quyền. Vui lòng thử lại!', 'Lỗi', { positionClass: "toast-top-center" });
                        }

                    }
                });
            }
        }
        function validatePermissionUser() {
            var resultValid = $("#frmPermissionUser").validate({
                rules: {
                    "a_menu": {
                        required: true,
                    },


                },
                messages: {
                    "a_menu": "Menu không được để trống!",

                },

            }).form();

            return resultValid;
        }

        function handelchangeMenu() {
            // Get selected menu
            const menuElement = document.getElementById('menu');
            const menuId = menuElement.value;
            const userId = $('#a_userId').val();
            $.ajax({
                url: '/account/GetDetailPermission/',
                data: {
                    MenuId: menuId,
                    UserId: userId
                },
                type: 'GET',
                success: function (response) {
                    // Select all checkboxes
                    // Clear all checkboxes before setting new ones
                    document.querySelectorAll('input[name="permissions"]').forEach(checkbox => {
                        checkbox.checked = false;
                    });
                    if (response != null && response.length > 0) {
                        response.forEach((item) => {
                            switch (item.permissionName) {
                                case 'Thêm':
                                    document.querySelector('input#them.form-check-input').checked = true
                                    break;
                                case 'Xóa':
                                    document.querySelector('input#xoa.form-check-input').checked = true
                                    break;
                                case 'Sửa':
                                    document.querySelector('input#sua.form-check-input').checked = true
                                    break;
                                case 'Duyệt':
                                    document.querySelector('input#duyet.form-check-input').checked = true
                                    break;

                            }
                        })
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        function RemovePermissionByUserIdMenuId(menuId) {
            const userId = $('#a_userId').val();
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/Account/DeletePermissionByUserIdMenuId',
                        type: 'GET',
                        data: {
                            MenuId: menuId,
                            UserId: userId
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Xóa phân quyền thành công!', 'Thành công', { positionClass: "toast-top-center" });
                                $("#modal_permission_user").modal("hide")
                            }
                            else {
                                console.error(response);
                                toastr.error('Có lỗi xảy ra khi xóa phân quyền !', 'Lỗi', { positionClass: "toast-top-center" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Có lỗi khi tải nội dung modal: ", error);
                            alert("Lỗi tải modal, vui lòng thử lại sau.");
                        }
                    });

                }
            });
        }
    </script>
}


