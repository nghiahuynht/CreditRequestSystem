
@{
    ViewData["Title"] = "Danh sách mục chi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model List<DAL.Models.ComboBoxModel>
@section styles{

    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css" rel="stylesheet" />
    <style>
        .div-member {
            margin-left: 20px;
        }

            .div-member .nav .nav-link {
                margin: 4px 0 !important;
            }

        .card .nav.flex-column > li {
            border-bottom: 0px;
        }

        .span-team-name {
            font-weight: bold
        }

        .i-edit-saleteam {
            color: #555;
        }

        .i-delete-saleteam {
            color: #ff0000;
        }

        .typeahead {
            width: 100% !important;
        }
    </style>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@(ViewData["Title"])</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">@(ViewData["Title"])</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">

    <div class="row">

        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">

                        <div class="col-sm-3">
                            <label>Mã mục chi</label>
                            <input type="text" class="form-control" id="txtMa" />
                        </div>
                        <div class="col-sm-3">
                            <label>Tên mục chi</label>
                            <input type="text" class="form-control" id="txtTen" />
                        </div>
                        <div class="col-sm-3">
                            <button onclick="SearchMucChi()" class="btn btn-filter btn-sm btn-primary"><i class="fa fa-search"></i>&nbsp;Tìm kiếm</button>
                            <button id="btn-createNV" class="btn btn-filter btn-sm btn-success" onclick="showModalCreateExpense(0)"><i class="fa fa-plus-circle"></i>&nbsp;Thêm mới</button>
                        </div>

                    </div>
                </div>

                <div class="card-body ">
                    <table class="table table-bordered table-hover dataTable" id="table-expense" width="100%">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Mã mục chi</th>
                                <th>Tên mục chi</th>
                                <th>Ghi chú</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>

    </div>


</section>


<!--modal add-->
<div class="modal modal-blur fade" id="modal_add_expense" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_expense">

    </div>
</div>


<!--modal add-->
<div class="modal modal-blur fade" id="modal_add_paymentinfo" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_paymentinfo">

    </div>
</div>



@section scripts{
    <script src="~/plugins/datatable/jquery.datatable.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/datatables-fixedcolumns/js/dataTables.fixedColumns.js"></script>

    <script src="~/plugins/mdb-treeview/forms-free.js"></script>
    <script src="~/plugins/mdb-treeview/scrolling-navbar.js"></script>
    <script src="~/plugins/mdb-treeview/treeview.js"></script>
    <script src="~/plugins/mdb-treeview/wow.js"></script>
    <script src="~/js/jquery.validate.js"></script>
    <script>
        var tableId = "#table-expense";
        var ajaxURL = "/Category/GetDataExpense";
        var columnData = [
            { "data": "id", visible: false },
            { "data": "code" },
            { "data": "name" },
            { "data": "notes" },
            {
                "data": "id", "render": function (data, type, row, meta) {
                    return RenderTableAction(data);
                }
            },


        ];

        var arrMembers = [];


        $(document).ready(function () {

            SearchMucChi();


        });
        function RenderTableAction(id) {
            var html = `
                        <div class='div-table-action'>
                            <i class='fa fa-edit' onclick='showModalCreateExpense(${id})' title='sửa'></i>
                            <i class='fa fa-trash' onclick='DeleteExpense(${id})' title='xóa'></i>
                            <i class='fa fa-eye' onclick='showModalCreatePaymentInfo(${id})' title='xóa'></i>
                        </div>`;
            return html;

        }

        function SearchMucChi() {

            var dataSearch = {
                Code: $("#txtMa").val(),
                Name: $("#txtTen").val()
            };
            GenrateDataTableSearch(tableId, ajaxURL, columnData, dataSearch);

        }

        function showModalCreateExpense(id) {
            $.ajax({
                url: '/Category/_AddMucChi/' + id, // Đảm bảo đường dẫn này đúng với action của bạn
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_expense').html(response);

                    // Hiển thị modal
                    $("#modal_add_expense").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        function CreateExpense() {

            var isValidate = validateData();

            if (isValidate == true) {


                var dataPost = {
                    Id: $("#a_active_group_id").val(),
                    Code: $("#a_code").val(),
                    Name: $("#a_name").val(),
                    Notes: $("#a_ghi_chu").val(),
                };
                $.ajax({
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    url: "/Category/CreateExpense",
                    dataType: 'json',
                    data: JSON.stringify(dataPost),
                    beforeSend: function () {

                    },
                    success: function (res) {
                        if (res.isSuccess === true) {
                            toastr.success('Thêm nhóm hoạt động thành công!', 'Thành công', { positionClass: "toast-top-center" });
                            SearchMucChi();
                            $("#modal_add_expense").modal("hide")
                        } else {
                            toastr.error('Có lỗi khi thêm nhóm hoạt động. Vui lòng thử lại!', 'Lỗi', { positionClass: "toast-top-center" });
                        }

                    }
                });
            }
        }

        function validateData() {
            var resultValid = $("#frmCreateExpense").validate({
                rules: {
                    "code": {
                        required: true,
                    },
                    "name": {
                        required: true,
                    }

                },
                messages: {
                    "code": "Mã không được để trống!",
                    "name": "Tên không được để trống!"
                },

            }).form();

            return resultValid;
        }

        function closeModal_Expense() {

            $("#modal_add_expense").modal("hide")

        }

        function DeleteExpense(id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/Category/DeleteExpense',
                        type: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Nhóm hoạt động đã được xóa thành công!', 'Thành công', { positionClass: "toast-top-center" });
                                SearchMucChi();
                            }
                            else {
                                console.error(response);
                                toastr.error('Có lỗi xảy ra khi xóa nhóm hoạt động !', 'Lỗi', { positionClass: "toast-top-center" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Có lỗi khi tải nội dung modal: ", error);
                            alert("Lỗi tải modal, vui lòng thử lại sau.");
                        }
                    });

                }
            });
        }

        function showModalCreatePaymentInfo(id) {
            $.ajax({
                url: '/Category/_AddThongTinThanhToan/' + id,
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_paymentinfo').html(response);

                    // Hiển thị modal
                    $("#modal_add_paymentinfo").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        //--------------HS Thanh Toán ---------------
        function AddFormPaymentProfile() {
            // Generate a unique random number
            var randomId = Date.now();
            var htmthstt = ` <tr>
                                <td>
                                    <input name="ma_hs_thanh_toan" id="a_ma_hs_thanh_toan_${randomId}" class="form-control"/>
                                </td>
                                <td>
                                    <input name="ten_hs_thanh_toan" id="a_ten_hs_thanh_toan_${randomId}" class="form-control" />
                                </td>
                                <td>
                                    <input name="ghi_chu_hs_thanh_toan" id="a_ghi_chu_hs_thanh_toan_${randomId}" class="form-control" />
                                </td>
                                <td>
                                    <input type="file" name="tep_dinh_kem" onchange="uploadFilePaymentInfo(this, ${randomId})" />
                                     <input type="hidden" name="tep_dinh_kem_hs_thanh_toan" id="a_tep_dinh_kem_hs_thanh_toan_${randomId}" value="-1" />
                                </td>
                                <td style="text-align:center;">
                                    <span class="fa fa-check" onclick="SaveProfile(${randomId})"></span>
                                    <span class="fa fa-trash" onclick="RemovePaymentProfile(${randomId})"></span>
                                </td>
                             </tr>`;
            $('#table_thong_tin_hs_thanh_toan').append(htmthstt);
        }

        function uploadFilePaymentInfo(input, id) {
            const file = input.files[0]; // Lấy file được chọn
            if (file) {
                // Upload file
                const fileData = new FormData();
                fileData.append('file', file);

                $.ajax({
                    url: '/FileUpload/UploadFile', // Đường dẫn đến API xử lý file
                    type: 'POST',
                    data: fileData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success == true && response.fileNameAttactId > 0) {
                            $(`#a_tep_dinh_kem_hs_thanh_toan_${id}`).val(response.fileNameAttactId);
                            toastr.success('Tải file thành công!', 'Thành công', { positionClass: "toast-top-center" });
                        }
                        else {
                            toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: "toast-top-center" });
                        }
                       
                       
                    },
                    error: function () {
                        toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: "toast-top-center" });
                    }
                });
            }
        }

        function RemovePaymentProfile(Id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax
                    $.ajax({
                        url: '/Category/DeletePaymentProfile',
                        type: 'GET',
                        data: {
                            Id: Id
                        },
                        contentType: 'application/json',
                        success: function (response) {
                            if (response.success) {

                                $(`span.fa-trash[onclick="RemovePaymentProfile(${Id})"]`).closest('tr').remove();
                                toastr.success('Xóa thông tin hồ sơ thành công!', 'Thành công');
                            }
                            else {

                                toastr.error('Xóa thông tin hồ sơ  thất bại!', 'Lỗi');
                            }
                        },
                        error: function (xhr, status, error) {

                            alert('Có lỗi khi gửi yêu cầu!');
                        }
                    });

                }
            });

        }

        function SaveProfile(profileId) {

            // Find the row that contains the clicked icon
            var row = $(`span.fa-check[onclick="SaveProfile(${profileId})"]`).closest('tr');

            // Retrieve values from the inputs in the row
            var codeInput = row.find('input[name="ma_hs_thanh_toan"]');
            var nameInput = row.find('input[name="ten_hs_thanh_toan"]');
            var notes = row.find('input[name="ghi_chu_hs_thanh_toan"]');
            var fileInput = row.find('input[name="tep_dinh_kem"]');
            var fileAttach = row.find('input[name="tep_dinh_kem_hs_thanh_toan"]');
            var code = codeInput.val();
            var name = nameInput.val();

            // Validation messages
            var errors = [];

            if (!code || code.trim() === "") {
                errors.push("Mã không được để trống!");
            }
            if (!name || name.trim() === "") {
                errors.push("Tên không được để trống!");
            }

            // Display validation errors if any
            if (errors.length > 0) {
                toastr.error(errors.join("<br>"), 'Lỗi', { positionClass: "toast-top-center" });
                return;
            }

            // Prepare the data for submission
            var dataPost = {
                Id: 0,
                ExpenseId: $("#ExpenseId").val(),
                PaymentInfoCode: code.trim(),
                PaymentInfoName: name.trim(),
                Notes: notes.val()?.trim(),
                FileAttachId: fileAttach.val()?.trim()
            };

            // Log the data (optional for debugging)
            console.log("dataPost", dataPost)
            $.ajax({
                url: '/Category/CreatePaymentInfo',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json',
                success: function (response) {
                    if (response.isSuccess) {
                        // Set inputs to readonly
                        codeInput.prop('readonly', true);
                        nameInput.prop('readonly', true);
                        notes.prop('readonly', true);
                        fileInput.prop('disabled', true);

                        // Remove the onclick event from the save icon ValueReturn
                        row.find('span.fa-check').remove();
                        // Update the trash icon with the new ID
                        row.find('span.fa-trash').attr('onclick', `RemovePaymentProfile(${response.longValReturn})`);
                        toastr.success('Thông tin hồ sơ đã tạo thành công!', 'Thành công', { positionClass: "toast-top-center" });
                    } else {
                        toastr.error('Có lỗi khi tạo thông tin hồ sơ. Vui lòng thử lại!', 'Lỗi', { positionClass: "toast-top-center" });
                    }
                },
                error: function (xhr, status, error) {
                    // Xử lý khi có lỗi xảy ra trong quá trình gọi AJAX
                    alert('Có lỗi khi gửi yêu cầu!');
                }
            });
        }
    </script>
}


