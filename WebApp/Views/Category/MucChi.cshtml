@using System.Security.Claims
@using WebApp.ExcelHelper;
@{
    ViewData["Title"] = "Danh sách mục chi";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // string Permission = User.Claims.FirstOrDefault(x => x.Type == "Permission").Value;
    bool isDelete = AuthHelper.GetPermissionHelper(ViewBag.Permissions).Contains(PermissionHelper.MucChi.Delete);
    bool isAdd = AuthHelper.GetPermissionHelper(ViewBag.Permissions).Contains(PermissionHelper.MucChi.Add);
    bool isEdit = AuthHelper.GetPermissionHelper(ViewBag.Permissions).Contains(PermissionHelper.MucChi.Edit);
}
@model List<DAL.Models.ComboBoxModel>
@section styles{

    <link href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/plugins/datatables-fixedcolumns/css/fixedColumns.bootstrap4.css" rel="stylesheet" />
    <style>
        .div-member {
            margin-left: 20px;
        }

            .div-member .nav .nav-link {
                margin: 4px 0 !important;
            }

        .card .nav.flex-column > li {
            border-bottom: 0px;
        }

        .span-team-name {
            font-weight: bold
        }

        .i-edit-saleteam {
            color: #555;
        }

        .i-delete-saleteam {
            color: #ff0000;
        }

        .typeahead {
            width: 100% !important;
        }
    </style>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@(ViewData["Title"])</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">@(ViewData["Title"])</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">

    <div class="row">

        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">

                        <div class="col-sm-3">
                            <label>Mã mục chi</label>
                            <input type="text" class="form-control" id="txtMa" />
                        </div>
                        <div class="col-sm-3">
                            <label>Tên mục chi</label>
                            <input type="text" class="form-control" id="txtTen" />
                        </div>
                        <div class="col-sm-6">
                            <button onclick="SearchMucChi()" class="btn btn-filter btn-sm btn-primary"><i class="fa fa-search"></i>&nbsp;Tìm kiếm</button>
                            <button class="btn btn-filter btn-sm btn-success" id="btn-xuatexcel"><i class="fa fa-download"></i>&nbsp;Xuất excel</button>

                            @if (isAdd == true)
                            {
                                <button id="btn-createNV" class="btn btn-filter btn-sm btn-primary" onclick="showModalCreateExpense(0)"><i class="fa fa-plus-circle"></i>&nbsp;Thêm mới</button>
                                <button id="btn-createNV" class="btn btn-filter btn-sm btn btn-success" onclick="showModalImport()"><i class="fas fa-file-import"></i>&nbsp;Import</button>
                            }
                        </div>

                    </div>
                </div>

                <div class="card-body ">
                    <table class="table table-bordered table-hover dataTable" id="table-expense" width="100%">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Nhóm hoạt động</th>
                                <th>Mã mục chi</th>
                                <th>Tên mục chi</th>
                                <th>Tiểu mục</th>
                                <th>Ghi chú</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>

    </div>


</section>


<!--modal add-->
<div class="modal modal-blur fade" id="modal_add_expense" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_expense">

    </div>
</div>


<!--modal add-->
<div class="modal modal-blur fade" id="modal_add_paymentinfo" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl" id="dailog_paymentinfo">

    </div>
</div>

<!--modal import-->
<div class="modal modal-blur fade" id="modal_import_expense" data-bs-backdrop="static" data-bs-focus="false" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog " id="form_import_expense">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Tải lên dữ liệu mục chi</h5>

            </div>
            <div class="modal-body">
                <p><strong>Bước 1:</strong> Tải file mẫu tại đây - <a href="~/template/TemplateImportExpense.xlsx"  class="text-primary">File mẫu</a></p>
                <p><strong>Bước 2:</strong> Tải lên file dữ liệu mẫu phía trên</p>
                <p class="text-danger"><strong>Lưu ý:</strong> Không thay đổi header của file mẫu</p>
                <form>
                    <div class="mb-3">
                        <label for="fileInput" class="form-label">Chọn file</label>
                        <input class="form-control" type="file" id="fileInput" accept=".xls, .xlsx" onchange="readFileImport()">
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<!--modal read import-->

<div id="cntModalListExpense">
    <div class="modal fade" id="ListExpenseModal" tabindex="-1" aria-labelledby="ListExpenseModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header pt-2 pb-2">
                    <h5 class="modal-title" id="ListExpenseModalLabel">Tải lên dữ liệu nhóm mục chi</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                        <span aria-hidden="true">
                            <i class="fa fa-times"></i>
                        </span>
                    </button>
                </div>
                <div class="modal-body" style="height: calc(100vh - 200px);overflow:scroll">
                    <div class="row mb-2">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-12">
                            <table class="table table-root">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="checkbox" name="checkAllRow" checked="checked">
                                        </th>
                                        <th scope="col">Mã nhóm</th>
                                        <th scope="col" class="">Tên nhóm</th>
                                        <th scope="col" class="">Nhóm hoạt động</th>
                                        <th scope="col" class="">Ghi chú</th>

                                    </tr>
                                </thead>
                                <tbody id="lst-data-info">
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer-custom">
                    <div class="footer-left col-6">
                        <label>Số lượng dòng đã chọn: </label>
                        <span id="sumcheck"></span>
                    </div>

                    <div class="footer-right col-6 pb-3">
                        <button type="button" class="btn btn-primary" onclick="ImportMucChi()">Import nhóm mục chi</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--modal result import-->
<div id="cntModalResultImport">
    <div class="modal fade" id="ListExpenseModalResultImport" tabindex="-1" aria-labelledby="ListExpenseModalResultImportLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header pt-2 pb-2">
                    <h5 class="modal-title" id="ListNVModalResultImportLabel">Kết Quả Import</h5>

                </div>
                <div class="modal-body" style="height: calc(100vh - 200px);overflow:scroll">
                    <div class="row mb-2">
                        <div class="col-xl-12 col-lg-12 col-md-12 col-12">
                            <table class="table table-root" id="table-root-result-import">
                                <thead>
                                    <tr>

                                        <th scope="col">Mã mục chi</th>
                                        <th scope="col" class="">Tên mục chi</th>
                                        <th scope="col" class="">Trạng thái</th>

                                    </tr>
                                </thead>
                                <tbody id="lst-data-info">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer-custom">


                    <div class="footer-right col-6 pb-3">

                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModalResultImport()">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/plugins/datatable/jquery.datatable.js"></script>
    <script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/plugins/datatables-fixedcolumns/js/dataTables.fixedColumns.js"></script>

    <script src="~/plugins/mdb-treeview/forms-free.js"></script>
    <script src="~/plugins/mdb-treeview/scrolling-navbar.js"></script>
    <script src="~/plugins/mdb-treeview/treeview.js"></script>
    <script src="~/plugins/mdb-treeview/wow.js"></script>
    <script src="~/js/jquery.validate.js"></script>
    <script>
        const isEdit = @isEdit.ToString().ToLower();
        const isDelete = @isDelete.ToString().ToLower();
        var lstCbPaymentProfile = [];
        var tableId = "#table-expense";
        var ajaxURL = "/Category/GetDataExpense";
        var columnData = [
            { "data": "id", visible: false },
            { "data": "activeGroupName" },
            { "data": "code" },
            { "data": "name" },
            { "data": "tieuMuc" },
            { "data": "notes" },
            {
                "data": "id", "render": function (data, type, row, meta) {
                    return RenderTableAction(data);
                }
            },


        ];



        $(document).ready(function () {

            SearchMucChi();

            $("#btn-xuatexcel").click(function () {
                ExportMucChi();
            });
        });


        function ExportMucChi() {
            var dataSearch = {
                Code: $("#txtMa").val(),
                Name: $("#txtTen").val()
            };
            location.href = "/Category/ExportMucChi?filfer=" + JSON.stringify(dataSearch);
        }

        function RenderTableAction(id) {
            let html = `<div class='div-table-action'>`;

            // Check if Edit action should be added
            if (isEdit) {
                html += `<i class='fa fa-edit' onclick='showModalCreateExpense(${id})' title='sửa'></i>&nbsp`;
            }

            // Check if Delete action should be added
            if (isDelete) {
                html += `<i class='fa fa-trash' onclick='DeleteExpense(${id})' title='xóa'></i>`;
            }
            html += `<i class='fa fa-eye' onclick='showModalCreatePaymentInfo(${id})' title='xóa'></i>`
            html += `</div>`;
           
            return html;

        }

        function SearchMucChi() {

            var dataSearch = {
                Code: $("#txtMa").val(),
                Name: $("#txtTen").val()
            };
            GenrateDataTableSearch(tableId, ajaxURL, columnData, dataSearch);

        }

        function showModalCreateExpense(id) {
            $.ajax({
                url: '/Category/_AddMucChi/' + id, // Đảm bảo đường dẫn này đúng với action của bạn
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_expense').html(response);

                    // Hiển thị modal
                    $("#modal_add_expense").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        function CreateExpense() {

            var isValidate = validateData();

            if (isValidate == true) {


                var dataPost = {
                    Id: $("#a_expense_id").val(),
                    ActiveGroupId: $("#a_nhom_hoat_dong").val(),
                    Code: $("#a_code").val(),
                    Name: $("#a_name").val(),
                    Notes: $("#a_ghi_chu").val(),
                    TieuMuc: $("#a_tieumuc").val(),
                };
                $.ajax({
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    url: "/Category/CreateExpense",
                    dataType: 'json',
                    data: JSON.stringify(dataPost),
                    beforeSend: function () {

                    },
                    success: function (res) {
                        if (res.isSuccess === true) {
                            toastr.success('Thêm nhóm hoạt động thành công!', 'Thành công', { positionClass: "toast-top-center" });
                            SearchMucChi();
                            $("#modal_add_expense").modal("hide")
                        } else {
                            toastr.error(res.errorMessage, 'Lỗi', { positionClass: "toast-top-center" });
                        }

                    }
                });
            }
        }

        function validateData() {
            var resultValid = $("#frmCreateExpense").validate({
                rules: {
                    "nhom_hoat_dong": {
                        required: true,
                    },
                    "code": {
                        required: true,
                    },
                    "name": {
                        required: true,
                    }

                },
                messages: {
                    "nhom_hoat_dong": "Nhóm hoạt động không được để trống!",
                    "code": "Mã không được để trống!",
                    "name": "Tên không được để trống!"
                },

            }).form();

            return resultValid;
        }

        function closeModal_Expense() {

            $("#modal_add_expense").modal("hide")

        }

        function DeleteExpense(id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax delete
                    $.ajax({
                        url: '/Category/DeleteExpense',
                        type: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            if (response.success) {

                                toastr.success('Mục chi đã được xóa thành công!', 'Thành công', { positionClass: "toast-top-center" });
                                SearchMucChi();
                            }
                            else {
                                console.error(response);
                                toastr.error('Có lỗi xảy ra khi mục chi hoạt động !', 'Lỗi', { positionClass: "toast-top-center" });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Có lỗi khi tải nội dung modal: ", error);
                            alert("Lỗi tải modal, vui lòng thử lại sau.");
                        }
                    });

                }
            });
        }

        function showModalCreatePaymentInfo(id) {
            $.ajax({
                url: '/Category/_AddThongTinThanhToanMucChi/' + id,
                type: 'GET',
                success: function (response) {
                    // Chèn HTML trả về vào phần tử có id "dailog_nv"
                    $('#dailog_paymentinfo').html(response);

                    // Hiển thị modal
                    $("#modal_add_paymentinfo").modal("show")
                },
                error: function (xhr, status, error) {
                    console.error("Có lỗi khi tải nội dung modal: ", error);
                    alert("Lỗi tải modal, vui lòng thử lại sau.");
                }
            });
        }

        //--------------HS Thanh Toán ---------------
        function AddFormPaymentProfile() {
            console.log("lstCbPaymentProfile", lstCbPaymentProfile)
            // Generate a unique random number
            var randomId = Date.now();

            var htmlcb = "<option></option>";
           
            lstCbPaymentProfile.forEach((item) => {
                htmlcb += `<option value="${item.id}" data-code=${item.code} data-isRequired=${item.isRequiredDoc}>${item.name}</option>`
            })
            var htmthstt = ` <tr>
                                    <td>
                                            <select class="form-control" id="cb_hs_thanh_toan_${randomId}" onchange="handleCBPaymentProfile(event, ${randomId})" >
                                            ${htmlcb}
                                            </select>
                                        
                                    </td>
                                    <td>
                                          <textarea name="ten_hs_thanh_toan" id="a_ten_hs_thanh_toan_${randomId}" class="form-control" ></textarea>
                                    </td>
                                    <td>
                                        <textarea name="ghi_chu_hs_thanh_toan" iid="a_ghi_chu_hs_thanh_toan_${randomId}"  class="form-control" ></textarea>
                                    </td>
                                    <td>
                                        <input type="file" name="tep_dinh_kem" onchange="uploadFilePaymentInfo(this, ${randomId})" />
                                         <input type="hidden" name="tep_dinh_kem_hs_thanh_toan" id="a_tep_dinh_kem_hs_thanh_toan_${randomId}" value="-1" />
                                    </td>
                                    <td style="text-align:center;">
                                        <span class="fa fa-check" onclick="SaveExpensePaymentProfile(${randomId})"></span>
                                        <span class="fa fa-trash" onclick="RemoveExpensePaymentProfile(${randomId})"></span>
                                    </td>
                                 </tr>`;
            $('#table_thong_tin_hs_thanh_toan').append(htmthstt);
        }

        function uploadFilePaymentInfo(input, id) {
            const file = input.files[0]; // Lấy file được chọn
            if (file) {
                // Upload file
                const fileData = new FormData();
                fileData.append('file', file);

                $.ajax({
                    url: '/FileUpload/UploadFile', // Đường dẫn đến API xử lý file
                    type: 'POST',
                    data: fileData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success == true && response.fileNameAttactId > 0) {
                            $(`#a_tep_dinh_kem_hs_thanh_toan_${id}`).val(response.fileNameAttactId);
                            toastr.success('Tải file thành công!', 'Thành công', { positionClass: "toast-top-center" });
                        }
                        else {
                            toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: "toast-top-center" });
                        }


                    },
                    error: function () {
                        toastr.error('Có lỗi khi tải file!', 'Lỗi', { positionClass: "toast-top-center" });
                    }
                });
            }
        }

        function RemoveExpensePaymentProfile(Id) {
            Swal.fire({
                title: 'Bạn có chắc chắn?',
                text: "Bạn sẽ không thể hoàn tác hành động này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // call ajax
                    $.ajax({
                        url: '/Category/DeleteExpensePaymentProfile',
                        type: 'GET',
                        data: {
                            Id: Id
                        },
                        contentType: 'application/json',
                        success: function (response) {
                            if (response.success) {

                                $(`span.fa-trash[onclick="RemoveExpensePaymentProfile(${Id})"]`).closest('tr').remove();
                                toastr.success('Xóa thông tin hồ sơ thành công!', 'Thành công');
                            }
                            else {

                                toastr.error('Xóa thông tin hồ sơ  thất bại!', 'Lỗi');
                            }
                        },
                        error: function (xhr, status, error) {

                            alert('Có lỗi khi gửi yêu cầu!');
                        }
                    });

                }
            });

        }

        function SaveExpensePaymentProfile(profileId) {

            // Find the row that contains the clicked icon
            var row = $(`span.fa-check[onclick="SaveExpensePaymentProfile(${profileId})"]`).closest('tr');

            // Retrieve values from the inputs in the row
            var nameInput = row.find('textarea[name="ten_hs_thanh_toan"]');
            var notes = row.find('textarea[name="ghi_chu_hs_thanh_toan"]');
            var fileInput = row.find('input[name="tep_dinh_kem"]');
            var fileAttachInput = row.find('input[name="tep_dinh_kem_hs_thanh_toan"]');
            var name = nameInput.val();
            var fileAttach = fileAttachInput.val();
            var dropdown = row.find('select'); // Find the dropdown in the current row

            // Retrieve the selected option and its data-isRequired attribute
            var selectedOption = dropdown.find('option:selected');
            var isRequiredDoc = selectedOption.data('isrequired'); // Get the value of data-isRequired
            var selectedOptionCode = selectedOption.data('code'); // Get the value of data-isRequired
            var selectedOptionVal = selectedOption.val(); // Get the value of data-isRequired
            
            // Validation messages
            var errors = [];
            if (isRequiredDoc == true ) {
                if (!fileAttach || fileAttach.trim() === "-1") {
                    errors.push("Hồ sơ này phải đính kèm file!");
                }
                
            }
            if (!selectedOptionVal || selectedOptionVal.trim() === "") {
                errors.push("Hồ sơ không được để trống!");
            }
            if (!name || name.trim() === "") {
                errors.push("Tên không được để trống!");
            }

            // Display validation errors if any
            if (errors.length > 0) {
                toastr.error(errors.join("<br>"), 'Lỗi', { positionClass: "toast-top-center" });
                return;
            }

            // Prepare the data for submission
            var dataPost = {
                Id: 0,
                ExpenseId: $("#ExpenseId").val(),
                ProfileId: selectedOptionVal,
                PaymentInfoCode: selectedOptionCode,
                PaymentInfoName: name.trim(),
                Notes: notes.val()?.trim(),
                FileAttach: fileAttachInput.val()?.trim()
            };

            // Log the data (optional for debugging)
            $.ajax({
                url: '/Category/CreateExpensePaymentInfo',
                type: 'POST',
                data: JSON.stringify(dataPost),
                contentType: 'application/json',
                success: function (response) {
                    if (response.isSuccess) {
                        // Set inputs to readonly
                        nameInput.prop('readonly', true);
                        notes.prop('readonly', true);
                        fileInput.prop('disabled', true);
                        dropdown.prop('disabled', true);
                        // Remove the onclick event from the save icon ValueReturn
                        row.find('span.fa-check').remove();
                        // Update the trash icon with the new ID
                        row.find('span.fa-trash').attr('onclick', `RemoveExpensePaymentProfile(${response.longValReturn})`);
                        toastr.success('Thông tin hồ sơ đã tạo thành công!', 'Thành công', { positionClass: "toast-top-center" });
                    } else {
                        toastr.error(response.errorMessage, 'Lỗi', { positionClass: "toast-top-center" });
                    }
                },
                error: function (xhr, status, error) {
                    // Xử lý khi có lỗi xảy ra trong quá trình gọi AJAX
                    alert('Có lỗi khi gửi yêu cầu!');
                }
            });
        }

        function handleCBPaymentProfile(event, randomId) {
            // Get the selected option's text
            const selectElement = event.target;
            const selectedText = selectElement.options[selectElement.selectedIndex].text;

            // Set the text of the corresponding input field
            const inputElement = document.getElementById(`a_ten_hs_thanh_toan_${randomId}`);
            if (inputElement) {
                inputElement.value = selectedText;
            }
        }

        function showModalImport() {
            $("#modal_import_expense").modal("show");
        }

        //function dowloadTemplate() {
        //    $.ajax({
        //        url: '/Category/DowloadTemplateImportExpense', // URL of the controller action
        //        type: 'POST',
        //        success: function (data, textStatus, xhr) {
        //            // Check if the response contains a file (xhr.status == 200 means success)
        //            var disposition = xhr.getResponseHeader('Content-Disposition');
        //            var fileName = "TemplateImportExpense.xlsx";
        //            var blob = data;

        //            // Create a link element and trigger the download
        //            var link = document.createElement('a');
        //            link.href = window.URL.createObjectURL(blob);
        //            link.download = fileName;
        //            link.click();
        //        },
        //        error: function (xhr, textStatus, errorThrown) {
        //            alert('Error exporting data: ' + errorThrown);
        //        },
        //        xhrFields: {
        //            responseType: 'blob'  // Important to handle binary file responses
        //        }
        //    });
        //}

        function readFileImport() {
            var formData = new FormData();
            var fileInput = document.getElementById('fileInput');
            var file = fileInput.files[0];
            if (file == undefined) {

                Swal.fire({
                    title: "Vui lòng chọn file!",
                    icon: "error"
                });
                return;
            }
            formData.append('file', file);
            $.ajax({
                url: '/Category/ReadFileImportExpense',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                beforeSend: function () {
                    ShowWaiting();
                },
                complete: function () {
                    HideWaiting();
                },
                success: function (response) {
                    console.log("response", response)
                    dataSubmit = [];
                    dataResponeAjax = [];

                    if (response.status = "Success") {

                        toastr.success('Import mục chi thành công!', 'Thành công', { positionClass: "toast-top-center" });

                        //var data = response.data;
                        //var htmlAppend = '';
                        //for (var i = 0; i < data.length; i++) {
                        //    var code = generateCode("MC");
                        //    data[i].code = code;
                        //    htmlAppend += `<tr>`;
                        //    htmlAppend += `<td class="col-checkbox">
                        //                                             <input data-id='`+ data[i].code + `' type="checkbox" checked="checked" name="checkRow">
                        //                     </td>`;
                        //    htmlAppend += `<td>` + data[i].code + `</td>`;
                        //    htmlAppend += `<td>` + data[i].name + `</td>`;
                        //    htmlAppend += `<td>` + data[i].activeGroupName + `</td>`;
                        //    htmlAppend += `<td>` + data[i].notes + `</td>`;
                        //    htmlAppend += `</tr>`;
                        //    dataSubmit.push(data[i]);
                        //    dataResponeAjax.push(data[i]);
                        //}
                        //$('#cntModalListExpense  #ListExpenseModal #lst-data-info').html(htmlAppend);
                        //showModal();
                    }
                   
                    $("#modal_import_expense").modal("hide");
                    SearchMucChi();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        title: jqXHR.responseText,
                        icon: "error"
                    });
                }
            });
        }

        function showModal() {
            $('#cntModalListExpense #ListExpenseModal').modal().show();
            caclCheckTotal();
            $('#modal_import_expense').modal('hide');
            $('#cntModalListExpense #ListExpenseModal #lst-data-info').on('click', '[name="checkRow"]', function () {
                var dataId = $(this).attr('data-id');
                if ($(this).is(':checked')) {
                    var dtSubmit = dataResponeAjax.find(x => x.code == dataId);
                    if (dtSubmit) {
                        dataSubmit.push(dtSubmit);
                    }
                }
                else {
                    $('[name="checkAllRow"]').prop('checked', false);
                    dataSubmit = dataSubmit.filter(x => x.code != dataId);
                }
                caclCheckTotal();
            });
            $('#cntModalListExpense #ListExpenseModal [name="checkAllRow"]').on('click', function () {
                if ($(this).is(':checked')) {
                    $('#cntModalListActiveGroup #ListActiveGroupModal #lst-data-info [name="checkRow"]').prop('checked', true);
                    dataSubmit = dataResponeAjax;
                }
                else {
                    $('#cntModalListActiveGroup #ListActiveGroupModal #lst-data-info [name="checkRow"]').prop('checked', false);
                    dataSubmit = [];
                }
                caclCheckTotal();
            })

        }

        function caclCheckTotal() {
            var total = 0;
            $('#cntModalListExpense #ListExpenseModal #lst-data-info [name="checkRow"]').each(function () {
                if ($(this).is(':checked')) {
                    total++;
                }
            });
            $('#cntModalListExpense #ListExpenseModal #sumcheck').text(total);
        }
        function checkAllCheckbox() {
            var flag = true;
            $('#cntModalListExpense #ListExpenseModal #lst-data-info [name="checkRow"]').each(function () {
                if (!$(this).is(':checked')) {
                    flag = false;
                    return false;
                }
            });
            return flag;
        }

    </script>
}


